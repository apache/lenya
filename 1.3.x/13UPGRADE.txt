How to Upgrade to Lenya 1.3

Lenya 1.3 is usable as an intial install or an upgrade from Lenya 1.2.  Lenya 1.3 knows nothing about Lenya 1.4 or 2.0 so upgrading publications from those releases may be difficult.  

First, install Lenya1.3.  Follow the instructions from the Release Notes for Lenya1.2, except download the code from Lenya1.3's SVN.

NOTE: If you encounter any errors running Lenya 1.3, check for duplicate libraries in directory:
   build/lenya/webapp/WEB-INF/lib
Keep the latest version of each duplicate.

=== Converting Publications from Lenya 1.2
The only required conversion is to change XSL references in page2xhtml.xsl and similar files:
CHANGE:
select="xhtml:div[@id = 'body']"
TO:
select="xhtml:html/xhtml:div[@id = 'body']"


=== Converting data to flat datastore
WARNING: The module sets the all documents to type "xhtml" except the homepage is set to type "home".  This is handled in content3.xsl and should be changed if your publication has other doctypes.

Open the URL:
http://{yourServer}/{yourPublication}/flat/migrate

To use the flat datastore, 
FILE: {pub}/config/publication.xconf
ADD the following line:
<content type="flat">content</content>
If you move the content directory, change the value.
Lenya must be restarted for this setting to be effective.

If using flat content and the "nav" Module is included, the "navigation" Module will pass control to the "nav" Module.  The "nav" Module expects PageModules (Modules that return HTML) to prefix navigation elements with the publication and module names.  Add the following lines to "page2xhtml.xsl" and similar files:

NEAR THE TOP:
<xsl:param name="contenttype"/>

NEAR THE BOTTOM:
<!-- 1.3 Nav Module Path Correction -->
<xsl:template match="//xhtml:div[@id != 'body']//*/@href"><xsl:choose>
<xsl:when test="$contenttype='flat'"><xsl:attribute name="href"><xsl:value-of select="$root"/><xsl:value-of select="."/></xsl:attribute></xsl:when>
<xsl:otherwise><xsl:copy/></xsl:otherwise>
</xsl:choose></xsl:template>

AND in the XMAP "module.xmap" of any new modules, add the contenttype parameter to the map:transform:
<map:transform src="module:///page2xhtml.xsl">
   <map:parameter name="contenttype" value="{publication:contenttype}"/>
   <!-- other parameters, including "root" -->
</map:transform


=== Converting Lenya 1.2 Usecases to Lenya 1.3 Modules
This is optional.  Lenya 1.3 understands Lenya 1.2 Usecases. Once the Modules are created, Lenya1.3 will automatically use them, even when the request uses the "?lenya.usecase=" format.

In your {pub} directory, create a directory names "modules".

In the {pub}/modules directory, create one directory for each Usecase.  The Usecase directories should have the name from the Usecase XMAPs.  So if you have {pub}/usecase-search.xmap, create a directory {pub}/modules/search.

COPY each of the Usecase XMAPs to the appropriate directory.  

RENAME the copied files (in {pub}/modules/{moduleID} to "module.xmap".

Open each of those files and fix the filepaths.  No changes are necessary for "cocoon:",  "fallback:" and "http:", but every "file:" src parameter must be fixed, including entries without a protocol.  For now, just add "module:///../../" to the beginning of each src parameter.
EXAMPLES:
src="xxx"
src="file:/xxx"
BECOME:
src="module:///../../xxx"

When accessing the content directory, use the content: protocol.

--
If you may revert the Publication to Lenya1.2, make the following changes.  Otherwise, delete all the {pub}/usecase-{usecaseID}.xmap files.

MODIFY FILES: {pub}/usecase-{usecaseID}.xmap
Change the  {usecaseID} appropriately.
<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:pipelines>
    <map:pipeline>
        <map:mount uri-prefix="" src="modules/{usecaseID}/module.xmap"/>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>


=== Converting to Live and Authoring Modules
We do not recommend creating a "live" Module from these instructions so the global "live" Module is used, but it may be better to use the existing code if your publication is heavily customized.

In the {pub}/modules directory, create directories named "live" and "authoring".

Copy {pub}/publication-sitemap.xmap to {pubs}/modules/live/module.xmap and {pub}/modules/authoring/module.xmap

Fix the SRC tags as discussed in the preceding section.

MODIFY FILE:{pub}/publication-sitemap.xmap
<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:pipelines>
    <map:pipeline>
        <map:mount uri-prefix="" src="modules/authoring/module.xmap"/>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>

The "authoring" Module will be used in case publication-sitemap.xmap is processed.
