<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2006 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- $Id: metadata.xml 55543 2004-10-26 00:14:59Z gregor $ -->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" 
  "http://forrest.apache.org/dtd/document-v20.dtd">
<document>
  <header>
    <title>Running Lenya Behind Apache with mod_proxy</title>
  </header>
  <body>
    
    <section>
      <title>Introduction</title>

      <p>
        This tutorial aims at getting you started with a proxy environment.
        We're using Apache HTTPD 2.2 with the <em>mod_proxy</em> module. You'll find
        a lot of documentation on the web how to set up the web server on your
        machine.
      </p>
      <p>
        Our goal is to run two virtual servers on your local machine:
      </p>
      <ul>
        <li><em>cms.example.com</em> - the authoring environment of your publication</li>
        <li><em>www.example.com</em> - the actual live site</li>
      </ul>
      <p>
        Your administrators, editors etc. will use the URL <em>http://cms.example.com</em>
        to connect to the authoring environment. We'll require an SSL connection for the
        login usecase. Once you have established an SSL connection, your connection will
        stay encrypted.
      </p>
      <p>
        The live area is mapped directly to the root of the <em>www.example.com</em> host.
        Since the authoring environment comprises different areas (for instance authoring,
        archive, trash), the publication root is mapped to the root of <em>cms.example.com</em>:
      </p>
      <source xml:space="preserve"><![CDATA[/pub/authoring <-> cms.example.com/authoring
/pub/archive   <-> cms.example.com/archive
/pub/trash     <-> cms.example.com/trash
/pub/live      <-> www.example.com]]></source>
    </section>
    
    <section>
      <title>Declaring the Hosts</title>
      <p>
        To tell your system that the <em>example.com</em> domains run on your local machine,
        open your <code>hosts</code> file, usually located at <code>/etc/hosts</code>,
        and add the following lines:
      </p>
      <source xml:space="preserve"><![CDATA[127.0.0.1       cms.example.com
127.0.0.1       www.example.com]]></source>
    </section>
    
    <section>
      <title>Configuring the Apache Web Server</title>
      <p>
        There are multiple options to connect the Apache web server, which acts as the
        reverse proxy, to the Tomcat servlet container. The two most common ways are
      </p>
      <ul>
        <li><a href="site:mod_proxy_14">mod_proxy</a></li>
        <li><a href="site:mod_proxy_ajp">mod_proxy_ajp</a></li>
        <li>mod_jk</li>
      </ul>
      <p>
        mod_proxy is the classic, proven approach. The AJP protocol
        is newer, easier to set up and provides seamless SSL integration. For more information
        on which connector to choose, refer to the
        <a href="http://tomcat.apache.org/faq/connectors.html">Tomcat connectors FAQ</a>.
      </p>
      <p>
        After configuring the Apache web server, you can restart it using
      </p>
      <source xml:space="preserve">$ sudo apachectl restart</source>
    </section>
    
    <section>
      <title>Configuring Tomcat's Cookie Path</title>
      <note>
        You'll certainly run into cookie problems when using a non-empty context path
        (like <em>lenya14</em> in the example above) instead of running Lenya in the root context.
        This causes errors like "The session doesn't contain the identity.".
        To avoid these problems, edit <code>$TOMCAT_HOME/conf/server.xml</code> and set the
        <em>emptySessionPath</em> attribute of the Tomcat connector configuration to <em>true</em>.
        You find more information in the <a href="http://tomcat.apache.org/tomcat-6.0-doc/config/ajp.html">Apache
        Tomcat configuration reference</a>.
      </note>
    </section>
    
    <section>
      <title>Configuring the Publication for Proxying</title>
      <p>
        When you use a proxy, Lenya has to convert all internal links accordingly.
        Therefore you have to tell the publication about the proxy configuration.
        Open the file <code>$PUBLICATION_HOME/config/publication.xml</code> and uncomment
        and modify the <code><![CDATA[<proxy/>]]></code> elements:
      </p>
      <source xml:space="preserve"><![CDATA[<proxies>
  <proxy area="authoring" ssl="true" url="https://cms.example.com/authoring"/>
  <proxy area="authoring" ssl="false" url="http://cms.example.com/authoring"/>
  <proxy area="trash" ssl="true" url="https://cms.example.com/trash"/>
  <proxy area="trash" ssl="false" url="http://cms.example.com/trash"/>
  <proxy area="archive" ssl="true" url="https://cms.example.com/archive"/>
  <proxy area="archive" ssl="false" url="http://cms.example.com/archive"/>
  <proxy area="live" ssl="true" url="https://www.example.com"/>
  <proxy area="live" ssl="false" url="http://www.example.com"/>
</proxies>]]></source>
    </section>
    
    <section>
      <title>Configuring the Global Proxies</title>
      <p>
        The application-wide (publication independent) proxies are configured in
        <code>WEB-INF/cocoon.xconf</code>. Look for the declaration of the <code>GlobalProxies</code>
        service and update this entry:
      </p>
      <source xml:space="preserve"><![CDATA[<component logger="lenya.proxy"
    role="org.apache.lenya.cms.linking.GlobalProxies"
    class="org.apache.lenya.cms.linking.impl.GlobalProxiesImpl">
  <proxy ssl="false" url="http://cms.host.com"/>
  <proxy ssl="true" url="https://cms.host.com"/>
</component>]]></source>
    </section>
    
    <section>
      <title>Testing the Settings</title>
      <p>
        After re-deploying the publication and restarting your servlet container,
        you should be able to access the
        authoring environment of the default publication at the URL
        <a href="http://cms.example.com/">http://cms.example.com/</a>.
      </p>
    </section>
    
  </body>
</document>