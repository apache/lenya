<?xml version="1.0"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- $Id$ -->

<project name="init">

  <description>
    Initialization Targets
  </description>

  <!-- ============================================================ -->
  <!-- Initialization target                                        -->
  <!-- ============================================================ -->
  <target name="init">
    <tstamp>
      <format property="SNAPSHOT_STAMP" pattern="yyyyMMdd'T'HHmmss"/>
    </tstamp>

    <property name="Name"     value="Apache Lenya"/>
    <property name="release"  value="1th"/>
    <property name="year"     value="1999-2004"/>

    <echo message="------------------- ${Name} ${version} [${year}] ----------------"/>
    <echo>Building with ${ant.version}</echo>
    <echo>Using build file ${ant.file}</echo>

    <property name="debug"          value="on"/>
    <property name="optimize"       value="off"/>
    <property name="deprecation"    value="off"/>
    <property name="nowarn"         value="on"/>
    <property name="build.compiler" value="modern"/>
    <property name="target.vm"      value="1.4"/>

    <property name="packages"      value="*.*"/>
    <property name="resource.dir"  value="${src.webapp.dir}/resources/css"/>

    <property name="today"         value="${TODAY}"/>

    <property name="snapshot.bin.name" value="${distname}-${SNAPSHOT_STAMP}-bin"/>
    <property name="snapshot.src.name" value="${distname}-${SNAPSHOT_STAMP}-src"/>
    <property name="snapshot.bin.dir" value="${dist.root}/${snapshot.bin.name}"/>
    <property name="snapshot.src.dir" value="${dist.root}/${snapshot.src.name}"/>
  </target>

  <target name="build-custom-tasks" depends="init">

    <!-- Copy java source files from ${java.dir} to ${build.src}-->
    <copy todir="${build.src}-tools" filtering="on">
      <fileset dir="${java.dir}" includes="org/apache/lenya/cms/ant/CopyJavaSourcesTask.java, org/apache/lenya/cms/ant/BulkCopyTask.java, org/apache/lenya/cms/ant/CopyTask.java, org/apache/lenya/cms/ant/TwoTuple.java, org/apache/lenya/cms/ant/SCMFilenameFilter.java, org/apache/lenya/cms/ant/JavaFilenameFilter.java"/>
    </copy>

    <mkdir dir="${build.dir}/${tools.tasks.dest}"/>
    <javac srcdir="${build.src}-tools"
           destdir="${build.dir}/${tools.tasks.dest}"
           debug="${debug}"
           optimize="{optimize}"
           deprecation="${deprecation}"
           target="${target.vm}"
           nowarn="${nowarn}"
           classpathref="classpath"
           source="${target.vm}"/>

    <taskdef name="copyJavaSources" classpath="${build.dir}/${tools.tasks.dest}" classname="org.apache.lenya.cms.ant.CopyJavaSourcesTask"/>
    <taskdef name="bulkCopy" classpath="${build.dir}/${tools.tasks.dest}" classname="org.apache.lenya.cms.ant.BulkCopyTask"/>
    <taskdef name="copyPubs"        classpath="${build.dir}/${tools.tasks.dest}" classname="org.apache.lenya.cms.ant.CopyTask"/>
    <taskdef name="xpatch" classname="XConfToolTask" classpath="${cocoon.src.dir}/tools/anttasks"/>
  </target>

  <!-- ============================================================ -->
  <!-- Prepares the build webapp directory                          -->
  <!-- ============================================================ -->
  <target name="prepare-cocoon" depends="init">
	<!-- exclude select cocoon files -->
    <copy todir="${build.webapp}" filtering="off">
      <fileset dir="${cocoon.webapp.dir}">
        <exclude name="sitemap.xmap"/>
        <exclude name="WEB-INF/cocoon.xconf"/>
        <exclude name="WEB-INF/logkit.xconf"/>
        <exclude name="WEB-INF/log4j.xconf"/>
        <exclude name="WEB-INF/web.xml"/>
        <exclude name="**/javac.jar"/>
        <exclude name="**/pizza*.jar"/>
      </fileset>
    </copy>

    <!-- patch cocoon.xconf -->
    <xslt
        in="${cocoon.webapp.dir}/WEB-INF/cocoon.xconf"
        out="${build.webapp}/WEB-INF/cocoon.xconf"
        style="${src.webapp.dir}/WEB-INF/cocoon-xconf.xsl"
        >
      <param name="xopus-context" expression="${xopus.context}"/>
      <param name="xopus-path" expression="${xopus.path}"/>
      <outputproperty name="indent" value="yes"/>
    </xslt>

    <!-- patch logkit.xconf -->
    <xslt
        in="${cocoon.webapp.dir}/WEB-INF/logkit.xconf"
        out="${build.webapp}/WEB-INF/logkit.xconf"
        style="${src.webapp.dir}/WEB-INF/logkit-xconf.xsl"
        >
      <outputproperty name="indent" value="yes"/>
    </xslt>

    <!-- patch log4j.xconf -->
    <copy file="${src.webapp.dir}/WEB-INF/log4j.xconf" todir="${build.webapp}/WEB-INF"/>

    <!-- patch web.xml -->
    <xslt
        in="${cocoon.webapp.dir}/WEB-INF/web.xml"
        out="${build.webapp}/WEB-INF/web.xml"
        style="${src.webapp.dir}/WEB-INF/web-xml.xsl"
        force="false"
        >
      <param name="enableUploads" expression="${enable.uploads}"/>
      <xmlcatalog>
        <dtd
          publicId="-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
          location="${src.webapp.dir}/WEB-INF/entities/web-app_2_3.dtd"/>
      </xmlcatalog>
      <outputproperty name="indent" value="yes"/>
    </xslt>

    <!-- Copy Entities -->
    <!--
    <copyJavaSources pubsrootdirs="${pubs.root.dirs}" javadir="${src.entities.dir}" builddir="${build.webapp}/${build.entities.dir}" />
    -->
  </target>

  <!-- ============================================================ -->
  <!-- copy the bulk of the cocoon webapp to our destination        -->
  <!-- ============================================================ -->
  <target name="prepare" depends="prepare-cocoon">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.webapp}"/>
  </target>

  <!-- ============================================================ -->
  <!-- Prepares the source code                                     -->
  <!-- ============================================================ -->
  <target name="prepare-src" depends="prepare, build-custom-tasks">
    <copy todir="${build.src}" filtering="on">
      <fileset dir="${java.dir}"/>
    </copy>

    <!-- FIXME: Use bulkCopy task in the future; needs regexp mapper which is part of ant optional package. -->
    <!-- Copy java source files from ${pubs.root.dirs} to ${build.src}-->
    <copyJavaSources pubsrootdirs="${pubs.root.dirs}" javadir="java/src" builddir="${build.src}" />

    <!-- Copy publication specific libraries from ${pubs.root.dirs} (java/lib) to ${build.webapp}/WEB-INF/lib-->
    <bulkCopy
      sourcedirs="${pubs.root.dirs}"
      todir="${build.webapp}/WEB-INF/lib"
      flatten="true">
      <fileset includes="*/java/lib/*"/>
    </bulkCopy>
  </target>
</project>
