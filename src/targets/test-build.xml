<?xml version="1.0"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- $Id$ -->

<project name="lenya-test">

  <description>
    Test Targets
  </description>

    <!-- === Test targets =========================================================== -->

  <property name="debug" value="true"/>
  <property name="test.pub.id" value="test"/>
  <property name="test.pub.source.id" value="default"/>
  <property name="junit.test.loglevel" value="1"/>
  
  <!--
  DEBUG 0
  INFO  1
  WARN  2
  ERROR 3
  FATAL 4
  -->

  <path id="classpath.default">
    <path refid="classpath"/>
    <pathelement location="${build.test}" />
    <pathelement path="${build.webapp}/WEB-INF/classes" />
    <fileset dir="${build.webapp}/WEB-INF/lib">
      <include name="**.jar"/>
    </fileset>
  </path>
      
  <!-- Runs all tests -->
  <target name="test"
      description="Runs all tests"
      depends="tests.junit, tests.anteater, tests.webtest"/>
  
  <!-- Prepares the test publication -->
  <target name="test.pub.prepare">
    <property name="test.pub.dir" value="${build.webapp}/lenya/pubs/${test.pub.id}"/>
    <echo>Creating test publication at ${test.pub.dir}</echo>
    <delete dir="${test.pub.dir}"/>
    <mkdir dir="${test.pub.dir}"/>
    <copy todir="${test.pub.dir}">
      <fileset dir="${build.webapp}/lenya/pubs/${test.pub.source.id}"/>
    </copy>
  </target>
  
  <!-- prepares the tests. -->
  <target name="tests.prepare">
    <mkdir dir="${build.test}"/>

    <!-- Copy test files to build test dir -->
    <copy todir="${build.test}" filtering="on">
      <fileset dir="${src.test.dir}" excludes="**/*.java"/>
    </copy>

    <copyJavaSources pubsrootdirs="${pubs.root.dirs}" javadir="java/test" builddir="${src.test.dir}" />

    <!-- Compile tests -->
    <javac srcdir="${src.test.dir}"
           destdir="${build.test}"
           debug="true"
           debuglevel="lines,vars,source"
           optimize="{optimize}"
           deprecation="{deprecation}"
           target="${target.vm}"
           fork="true"
           source="1.4">
      <classpath refid="classpath"/>
      <classpath>
        <pathelement path="${build.webapp}/WEB-INF/classes" />
      </classpath>
    </javac>
  </target>


  <!-- Runs JUnit tests -->
  <target name="tests.junit"	depends="init, tests.prepare,
        test.identity" />
  
  <!--
  			test.identity,
  			test.workflow,
  			test.anttask,
  			test.publisher,
  			test.accesscontrol,
        test.deactivate,
        test.publications" />
  -->

  
  <!-- Identity Test -->
  <target name="test.identity" depends="test.pub.prepare">
    <junit printsummary="yes" showoutput="true" haltonerror="on" haltonfailure="on">
      <sysproperty key="junit.test.loglevel" value="${junit.test.loglevel}"/>
      <sysproperty key="contextRoot" value="${basedir}/build/lenya/webapp"/>
      <formatter type="plain"/>
      <classpath refid="classpath"/>
      <classpath>
        <pathelement location="${build.test}" />
        <pathelement path="${build.webapp}/WEB-INF/classes" />
        <fileset dir="${build.webapp}/WEB-INF/lib">
          <include name="*.jar"/>
          <include name="endorsed/*.jar"/>
        </fileset>
        <pathelement path="${src.test.dir}"/>
      </classpath>
      <test name="org.apache.lenya.ac.impl.IdentityTest"/>
    </junit>
  </target>
  
    
  <!-- AntTask Test -->
  <target name="test.anttask" depends="test.pub.prepare">
    <java
    	fork="yes"
    	classname="org.apache.lenya.cms.task.AntTaskTest"
    	>
      <jvmarg value="-enableassertions"/>
      <arg value="${build.webapp}"/>
      <arg value="${test.pub.id}"/>
      <classpath refid="classpath.default"/>
    </java>
  </target>
  

  <!-- Workflow Test -->
  <target name="test.workflow" depends="test.pub.prepare">
    <java fork="yes" classname="org.apache.lenya.cms.workflow.WorkflowTest">
      <jvmarg value="-enableassertions"/>
      <arg value="${build.webapp}"/>
      <arg value="${test.pub.id}"/>
      <arg value="xhtml"/> <!-- document type -->
      <classpath refid="classpath.default"/>
    </java>
  </target>  
  
  <!-- Publisher Test -->
  <target name="test.publisher" depends="test.pub.prepare">
    <java fork="yes" classname="org.apache.lenya.cms.task.PublisherTest">
      <jvmarg value="-enableassertions"/>
      <arg value="${build.webapp}"/>
      <arg value="${test.pub.id}"/>
      <classpath refid="classpath.default"/>
    </java>
  </target>  

  <!-- Access Control Test -->
  <target name="test.accesscontrol" depends="test.pub.prepare">
    <java fork="yes" classname="org.apache.lenya.ac.impl.AccessControllerTest">
      <jvmarg value="-enableassertions"/>
      <arg value="${build.webapp}"/>
      <arg value="${test.pub.id}"/>
      <classpath refid="classpath.default"/>
    </java>
  </target>  

  <!-- Publication Test -->
  <target name="test.publication" depends="test.pub.prepare">
    <java fork="yes" classname="org.apache.lenya.cms.publication.PublicationTest">
      <jvmarg value="-enableassertions"/>
      <arg value="${build.webapp}"/>
      <arg value="${test.pub.id}"/>
      <classpath refid="classpath.default"/>
    </java>
  </target>  

  <!-- Deactivate Document Test -->
  <target name="test.deactivate" depends="test.pub.prepare">
    <java fork="yes" classname="org.apache.lenya.cms.task.DocumentDeactivateTaskTest">
      <jvmarg value="-enableassertions"/>
      <arg value="C:\digitas\src\lenya-trunk\build\lenya\webapp"/>
      <arg value="${test.pub.id}"/>
      <classpath refid="classpath.default"/>
    </java>
  </target>

  <!-- ================================================ -->
  <!-- Anteater tests -->
  <!-- ================================================ -->
  <target name="tests.anteater">
    <property name="anteater.home" value=""/>
    <property name="anteater.buildfile" value="src/test/anteater/tests.xml"/>
    <java classname="org.apache.tools.ant.Main" fork="true">
      <classpath>
        <pathelement location="${anteater.home}/resources"/>
        <fileset dir="${anteater.home}">
          <include name="lib/**/*.jar"/>
        </fileset>
      </classpath>
      <jvmarg value="-Dant.home=${anteater.home}"/>
      <jvmarg value="-Danteater.home=${anteater.home}" />
      <jvmarg value="-Danteater.report=${anteater.home}/resources/scripts/report.xml" />
      <jvmarg value="-Danteater.resources=${anteater.home}/resources" />
      <arg line="-f ${anteater.buildfile}"/>
      <arg value="-propertyfile" />
      <arg value="${anteater.home}/resources/META-INF/Anteater.properties" />
      <!--
      <arg value="-Ddefault.debug=10"/>
      -->
    </java>
  </target>


  <!-- ================================================ -->
  <!-- Canoo Webtest tests -->
  <!-- ================================================ -->
  <target name="tests.webtest">
    <property name="webtest.home" value=""/>
    <property name="webtest.buildfile" value="src/test/webtest/tests.xml"/>
    <java classname="org.apache.tools.ant.Main" fork="true">
      <classpath>
        <fileset dir="${webtest.home}">
          <include name="lib/**/*.jar"/>
        </fileset>
        <pathelement location="${webtest.home}/lib"/>
      </classpath>
      <jvmarg value="-Dwebtest.home=${webtest.home}" />
      <arg line="-f ${webtest.buildfile}"/>
    </java>
  </target>

<!-- The XSP compilation target -->
  <target name="compile-xsp" depends="tests.prepare"
          description="Compile the XSP sources">
    <mkdir dir="${build.dir}/work"/>
    <java classname="org.apache.cocoon.bean.XSPPrecompileWrapper">
      <arg value="-c${build.webapp}"/>
      <arg value="-w${build.dir}/work"/>
      <classpath>
         <pathelement path="${build.webapp}/WEB-INF/classes"/>
         <fileset dir="${build.webapp}/WEB-INF/lib">
            <include name="*.jar"/>
         </fileset>
         <fileset dir="tools/jetty/lib">
          <include name="servlet-*.jar"/>
         </fileset>
      </classpath>
    </java>
  </target>
</project>
