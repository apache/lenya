<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- $Id: $ -->

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <map:pipelines>
      
    <!-- Introspection -->
    <map:pipeline>
      <map:match pattern="*/**/introspection.xml">
        <map:generate src="context://lenya/content/util/empty.xml"/>
        <map:transform src="fallback://lenya/modules/neutron/xslt/introspection.xsl">
          <map:parameter name="context" value="{page-envelope:context-prefix}"/>
          <map:parameter name="publication" value="{page-envelope:publication-id}"/>
          <map:parameter name="area" value="{1}"/>
          <map:parameter name="page-id" value="{2}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
  
    <map:pipeline>
        
      <map:match pattern="open" type="step">
        <map:select type="resource-exists">
        <map:parameter name="prefix" value="lenyadoc:/"/>
          <map:when test="{page-envelope:document-language}/{page-envelope:document-id}">
            <map:read src="lenyadoc:/{page-envelope:document-language}/{page-envelope:document-id}"/>
          </map:when>
          <map:otherwise>
            <map:generate src="context://lenya/content/util/empty.xml"/>
            <map:serialize type="xml" status-code="412"/>
          </map:otherwise>
        </map:select>
      </map:match>
      
      <map:match pattern="checkout" type="step">
        <map:select type="resource-exists">
        <map:parameter name="prefix" value="lenyadoc:/"/>
          <map:when test="{page-envelope:document-language}/{page-envelope:document-id}">
            <map:act type="reserved-checkout">
              <!-- TODO: add info from RCML ... -->
              <map:generate src="checkout-exception.xml"/>
              <map:serialize type="xml" status-code="500"/>
            </map:act>
            <map:read src="lenyadoc:/{page-envelope:document-language}/{page-envelope:document-id}"/>
          </map:when>
          <map:otherwise>
            <map:generate src="context://lenya/content/util/empty.xml"/>
            <map:serialize type="xml" status-code="412"/>
          </map:otherwise>
        </map:select>
      </map:match>
      
      <map:match pattern="save" type="step">
        <!-- test if the document is checked out -->
        <map:act type="reserved-checkout-test">
          <map:generate src="checkout-exception.xml"/>
          <map:serialize type="xml" status-code="500"/>
        </map:act>
        <map:generate type="stream"/>
        <map:transform src="fallback://lenya/modules/neutron/xslt/addSourceTags.xsl">
          <map:parameter name="source" value="context://lenya/pubs/{page-envelope:publication-id}/content/{page-envelope:area}/{page-envelope:document-path}"/>
        </map:transform>
        <map:transform type="write-source">
          <map:parameter name="serializer" value="xml"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
        
      <map:match pattern="checkin" type="step">
        <!-- test if the document is checked out -->
        <map:act type="reserved-checkout-test">
          <map:generate src="checkout-exception.xml"/>
          <map:serialize type="xml" status-code="500"/>
        </map:act>
        <map:generate type="stream"/>
        <map:transform src="fallback://lenya/modules/neutron/xslt/addSourceTags.xsl">
          <map:parameter name="source" value="context://lenya/pubs/{page-envelope:publication-id}/content/{page-envelope:area}/{page-envelope:document-path}"/>
        </map:transform>
        <map:transform type="write-source">
          <map:parameter name="serializer" value="xml"/>
        </map:transform>
        <map:act type="reserved-checkin">
          <map:generate src="checkin-exception.xml"/>
          <map:serialize type="xml"  status-code="500"/>
        </map:act>
        <map:serialize type="xml"/>
      </map:match>
      
      <map:match pattern="lock" type="step">
        <map:select type="resource-exists">
        <map:parameter name="prefix" value="lenyadoc:/"/>
          <map:when test="{page-envelope:document-language}/{page-envelope:document-id}">
            <map:act type="reserved-checkout">
              <!-- TODO: add info from RCML ... -->
              <map:generate src="checkout-exception.xml"/>
              <map:serialize type="xml" status-code="500"/>
            </map:act>
          </map:when>
          <map:otherwise>
            <map:generate src="context://lenya/content/util/empty.xml"/>
            <map:serialize type="xml" status-code="412"/>
          </map:otherwise>
        </map:select>
      </map:match>
      
      <map:match pattern="unlock" type="step">
        <map:act type="reserved-checkin">
          <map:generate src="checkin-exception.xml"/>
          <map:serialize type="xml"  status-code="500"/>
        </map:act>
      </map:match>
      
    </map:pipeline>
    
  </map:pipelines>

</map:sitemap>
