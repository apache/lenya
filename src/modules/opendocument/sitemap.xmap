<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <map:pipelines>

    <map:pipeline>
      <!-- View Revision? -->
      <map:match pattern="*.xml">
        <map:match type="step" pattern="view-revision">
          <map:generate type="serverpages" src="fallback://lenya/content/rc/view.xsp">
          </map:generate>
          <map:transform src="fallback://lenya/xslt/rc/toDoc.xsl"/>
          <map:transform src="fallback://lenya/modules/links/xslt/links2xhtml.xsl">
            <map:parameter name="rendertype" value="{1}"/>
            <map:parameter name="nodeid" value="{page-envelope:document-name}"/>
            <map:parameter name="language" value="{page-envelope:document-language}"/>
          </map:transform>
          <map:serialize type="xml"/>
        </map:match>
      </map:match>

      <!-- webdav GET matcher -->
      <map:match pattern="davget.xml">
        <map:act type="set-header">
          <map:parameter name="Last-Modified" value="{date-iso8601-rfc822:{page-envelope:document-lastmodified}}" />
          <map:read src="lenyadoc://{page-envelope:publication-id}/{page-envelope:area}/{page-envelope:document-language}/{page-envelope:document-id}" mime-type="application/vnd.oasis.opendocument.text"/>
        </map:act>
      </map:match>

      <!-- parametrized doctype matcher -->
      <!-- pattern="{rendertype}" -->

<!-- TODO: The path of the odt file should be get with the input module, like for the xml file.
 Write a special DocumentIdToPathMapper, permit a Resource to have its own Mapper-->
      <map:match pattern="*.xml">
        <map:generate src="zip:lenya://lenya/pubs/{page-envelope:publication-id}/content/{page-envelope:area}{page-envelope:document-id}/index_{page-envelope:document-language}.odt!/content.xml"/>
<!--
        <map:generate src="zip:lenyadoc://{page-envelope:publication-id}/{page-envelope:area}/{page-envelope:document-language}/{page-envelope:document-id}!/content.xml"/>
-->

<!--
        <map:transform src="fallback://lenya/modules/opendocument/xslt/main_html.xsl">
            <map:parameter name="document_name" value="{1}"/>
            <map:parameter name="metaFileURL" value="zip://meta.xml@context://lenya/pubs/{page-envelope:publication-id}/content/{page-envelope:area}{page-envelope:document-id}/index_{page-envelope:document-language}.odt"/>
            <map:parameter name="stylesFileURL" value="zip://styles.xml@context://lenya/pubs/{page-envelope:publication-id}/content/{page-envelope:area}{page-envelope:document-id}/index_{page-envelope:document-language}.odt"/>
        </map:transform>
-->

        <map:transform src="fallback://lenya/modules/opendocument/xslt/opendocument2xhtml.xsl"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="**.odt">
        <map:read src="lenya://lenya/pubs/{page-envelope:publication-id}/content/{page-envelope:area}{page-envelope:document-id}/index_{page-envelope:document-language}.odt" mime-type="application/vnd.oasis.opendocument.text"/>
<!--
        <map:read src="lenyadoc://{page-envelope:publication-id}/{page-envelope:area}/{page-envelope:document-language}/{page-envelope:document-id}" mime-type="application/vnd.oasis.opendocument.text"/>
-->
      </map:match>

    </map:pipeline>
    
  </map:pipelines>
</map:sitemap>
