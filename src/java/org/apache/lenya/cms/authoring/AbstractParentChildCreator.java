package org.wyona.cms.authoring;

import java.io.File;
import org.dom4j.Node; 
/**
 * @author <a href="mailto:michael.wechner@wyona.com">Michael Wechner</a>
 */
public abstract class AbstractParentChildCreator {

    public static short LEAF_NODE = 0;
    public static short BRANCH_NODE = 1;
    
  /**
   *  added by <a href="mailto:juergen.bigalke@wyona.org">Juergen Bigalke</a>
   */
      public void init(Node creatorElement) {  }                                                                                 
      
  /**
     * Return the child type which is either <code>LEAF_NODE</code> or
     * <code>BRANCH_NODE</code>.
     *
     * @param childType a <code>short</code> value
     * @return  LEAF_NODE or BRANCH_NODE
     * @exception Exception if an error occurs
     */
    public abstract short getChildType(short childType) throws Exception;
    
    /**
     * Generate a Tree Id.
     *
     * @param childId a <code>String</code> value
     * @param childType a <code>short</code> value (either
     * <code>LEAF_NODE</code> or <code>BRANCH_NODE</code>.)
     * @return a <code>String</code> Tree Id
     * @exception Exception if an error occurs
     */
    public abstract String generateTreeId(String childId, short childType)
	throws Exception;

    /**
     * @param samplesDir resolved/generated by ParentChildCreatorAction
     * @param parentDir resolved/generated by ParentChildCreatorAction
     * @param childId from HTML form
     * @param childType from HTML form
     */
    public abstract void create(File samplesDir, File parentDir,
				String childId, short childType)
	throws Exception;

    /**
     * Utility function to copy a source file to destination
     *
     * @param source a <code>File</code> value
     * @param destination a <code>File</code> value
     * @return true if the copy was succesfull, false otherwise
     * @exception Exception if an error occurs
     */
    protected boolean copyFile(File source, File destination)
	throws Exception {
	
	if (source.exists()) {
	    
	    File parentDestination = new File(destination.getParent());
	    if (!parentDestination.exists()) {
		parentDestination.mkdirs();
	    }
	    org.apache.avalon.excalibur.io.FileUtil.copyFile(source,destination);
	    return true;
	} else {
	    return false;
	}
    }
}
