/*
 * $Id: AbstractParentChildCreator.java,v 1.10 2003/02/07 12:14:07 ah Exp $
 * <License>
 * The Apache Software License
 *
 * Copyright (c) 2002 wyona. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, this
 *    list of conditions and the following disclaimer in the documentation and/or
 *    other materials provided with the distribution.
 *
 * 3. All advertising materials mentioning features or use of this software must
 *    display the following acknowledgment: "This product includes software developed
 *    by wyona (http://www.wyona.org)"
 *
 * 4. The name "wyona" must not be used to endorse or promote products derived from
 *    this software without prior written permission. For written permission, please
 *    contact contact@wyona.org
 *
 * 5. Products derived from this software may not be called "wyona" nor may "wyona"
 *    appear in their names without prior written permission of wyona.
 *
 * 6. Redistributions of any form whatsoever must retain the following acknowledgment:
 *    "This product includes software developed by wyona (http://www.wyona.org)"
 *
 * THIS SOFTWARE IS PROVIDED BY wyona "AS IS" WITHOUT ANY WARRANTY EXPRESS OR IMPLIED,
 * INCLUDING THE WARRANTY OF NON-INFRINGEMENT AND THE IMPLIED WARRANTIES OF MERCHANTI-
 * BILITY AND FITNESS FOR A PARTICULAR PURPOSE. wyona WILL NOT BE LIABLE FOR ANY DAMAGES
 * SUFFERED BY YOU AS A RESULT OF USING THIS SOFTWARE. IN NO EVENT WILL wyona BE LIABLE
 * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR LOST PROFITS EVEN IF wyona HAS
 * BEEN ADVISED OF THE POSSIBILITY OF THEIR OCCURRENCE. wyona WILL NOT BE LIABLE FOR ANY
 * THIRD PARTY CLAIMS AGAINST YOU.
 *
 * Wyona includes software developed by the Apache Software Foundation, W3C,
 * DOM4J Project, BitfluxEditor and Xopus.
 * </License>
 */
package org.wyona.cms.authoring;

import org.dom4j.Node;

import java.io.File;


/**
 * DOCUMENT ME!
 *
 * @author <a href="mailto:michael.wechner@wyona.com">Michael Wechner</a>
 */
public abstract class AbstractParentChildCreator {
    public static short LEAF_NODE = 0;
    public static short BRANCH_NODE = 1;

    /**
     * added by <a href="mailto:juergen.bigalke@wyona.org">Juergen Bigalke</a>
     *
     * @param creatorElement DOCUMENT ME!
     */
    public void init(Node creatorElement) {
    }

    /**
     * Return the child type which is either <code>LEAF_NODE</code> or <code>BRANCH_NODE</code>.
     *
     * @param childType a <code>short</code> value
     *
     * @return LEAF_NODE or BRANCH_NODE
     *
     * @exception Exception if an error occurs
     */
    public abstract short getChildType(short childType)
        throws Exception;

    /**
     * Create Child Name for tree entry
     *
     * @param childname a <code>String</code> value
     *
     * @return a <code>String</code> for Child Name for tree entry
     *
     * @exception Exception if an error occurs
     */
    public String getChildName(String childname) throws Exception {
        if (childname.length() != 0) {
            return childname;
        }

        return "abstract_default";
    }

    /**
     * Generate a Tree Id.
     *
     * @param childId a <code>String</code> value
     * @param childType a <code>short</code> value (either <code>LEAF_NODE</code> or
     *        <code>BRANCH_NODE</code>.)
     *
     * @return a <code>String</code> Tree Id
     *
     * @exception Exception if an error occurs
     */
    public abstract String generateTreeId(String childId, short childType)
        throws Exception;

    /**
     * DOCUMENT ME!
     *
     * @param samplesDir resolved/generated by ParentChildCreatorAction
     * @param parentDir resolved/generated by ParentChildCreatorAction
     * @param childId from HTML form
     * @param childType from HTML form
     */
    public abstract void create(File samplesDir, File parentDir, String childId, short childType,
        String childName) throws Exception;

    /**
     * Utility function to copy a source file to destination
     *
     * @param source a <code>File</code> value
     * @param destination a <code>File</code> value
     *
     * @return true if the copy was succesfull, false otherwise
     *
     * @exception Exception if an error occurs
     */
    protected boolean copyFile(File source, File destination)
        throws Exception {
        if (source.exists()) {
            File parentDestination = new File(destination.getParent());

            if (!parentDestination.exists()) {
                parentDestination.mkdirs();
            }

            org.apache.avalon.excalibur.io.FileUtil.copyFile(source, destination);

            return true;
        } else {
            return false;
        }
    }
}
