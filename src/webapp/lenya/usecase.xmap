<?xml version="1.0"?>

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <!-- =========================== Components ================================ -->

  <map:components>
    <map:generators default="file"/>
    <map:transformers default="xslt"/>
    <map:readers default="resource"/>
    <map:serializers default="html"/>
    <map:matchers default="wildcard"/>
    <map:actions/>
    <map:selectors>
      <map:selector name="exception" logger="sitemap.selector.exception"
	src="org.apache.cocoon.selection.ExceptionSelector">
	<exception name="execution" class="org.apache.lenya.cms.task.ExecutionException" />
	<exception name="publishing" class="org.apache.lenya.cms.publishing.PublishingException"/>
	<exception name="sitetree" class="org.apache.lenya.cms.publication.SiteTreeException"/>
      </map:selector>
    </map:selectors>
  </map:components>
  
  <map:views>
    <map:view name="aggregation" from-label="aggregation">
      <map:serialize type="xml"/>
    </map:view>
    <map:view name="xsp" from-label="xsp">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>

  <!-- =========================== Resources ================================ -->
  
  <map:resources>
  
    <map:resource name="scheduler-page">
        
      <map:aggregate element="scheduler" prefix="sch" ns="http://www.lenya.org/2002/sch" label="aggregation">
        <map:part src="cocoon:/document-types/{publication-id}"/>
        <map:part src="cocoon:/tasks/{publication-id}"/>
        <map:part src="cocoon:/scheduler-xsp" strip-root="true"/>
        <map:part src="cocoon:/scheduler-servlet" strip-root="true"/>
      </map:aggregate>
      <map:transform src="xslt/scheduler/filter.xsl"/>
        
      <map:act type="uriparametrizer" src="{uri}">
        <map:parameter name="doctype" value="cocoon://uri-parameter/{publication-id}/doctype"/>
        <map:transform src="xslt/scheduler/filterTasks-new.xsl">
          <map:parameter name="documentType" value="{doctype}"/>
        </map:transform>
      </map:act>
    </map:resource>
    
    <map:resource name="style-publish">
      <map:transform src="xslt/publishing/screen.xsl">
        <map:parameter name="use-request-parameters" value="true"/>
        <map:parameter name="document-id" value="{page-envelope:document-id}"/>
      </map:transform>
      <map:transform src="xslt/util/page2xhtml.xsl">
        <map:parameter name="context-prefix" value="{request:contextPath}"/>
      </map:transform>
      <map:serialize type="html"/>
    </map:resource>
  
    <map:resource name="usecase-create">
      <!-- use publication-specific schema if available -->
      <map:act type="resource-exists" src="pubs/{publication-id}/content/authoring/create.xsp">
	<map:generate type="serverpages" src="pubs/{../publication-id}/content/authoring/create.xsp"/>
	<map:transform src="pubs/{../publication-id}/xslt/authoring/create.xsl"/>
	<map:serialize />
      </map:act>

      <!-- otherwise use default schema -->
      <map:generate type="serverpages" src="content/authoring/create.xsp"/>
      <map:transform src="xslt/authoring/create.xsl"/>
      <map:serialize />
    </map:resource>

  </map:resources>
  
  <!-- =========================== Pipelines ================================ -->
  
  <map:pipelines>

    <map:pipeline>
    
      <!-- load document types -->    
      <map:match pattern="document-types/*">
        <map:generate src="pubs/{1}/config/doctypes/doctypes.xconf"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- load task list -->
      <map:match pattern="tasks/*">
        <map:generate src="pubs/{1}/config/tasks/tasks.xconf"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- create the current date -->
      <map:match pattern="scheduler-xsp">
        <map:generate type="serverpages" src="content/scheduler/scheduler-new.xsp"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- create the current job snapshot -->
      <map:match pattern="scheduler-servlet">
        <map:generate type="servletproxy" src="/lenya/servlet/QuartzSchedulerServlet"/>
        <map:transform src="xslt/scheduler/sort.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
      
    </map:pipeline>

    <map:pipeline>
    
    <!-- {publication-id}/{area}/{uri}-->
    <map:match pattern="*/*/**">
    
      <!-- mount publication-specific usecase sitemap -->
      <map:act type="resource-exists" src="pubs/{1}/usecase.xmap">
        <map:mount
            uri-prefix="{../1}"
            src="pubs/{../1}/usecase.xmap"
            check-reload="true"
            reload-method="synchron"/>
      </map:act>
      
      <!--
      Scheduler
      -->
      
      <!-- Schedule Document: View, Add, Edit, Delete Jobs -->
      <map:match type="usecase" pattern="schedule">
      
          <map:call resource="scheduler-page">
            <map:parameter name="publication-id" value="{../1}"/>
            <map:parameter name="uri" value="{../2}/{../3}"/>
          </map:call>
          <map:transform src="xslt/scheduler/scheduler-page.xsl">
            <map:parameter name="context-prefix" value="{request:contextPath}"/>
            <map:parameter name="publication-id" value="{../1}"/>
            <map:parameter name="area" value="{../2}"/>
            <map:parameter name="document-uri" value="{../3}"/>
          </map:transform>
          <map:transform src="xslt/util/page2xhtml.xsl">
            <map:parameter name="context-prefix" value="{request:contextPath}"/>
          </map:transform>
          <map:serialize type="html"/>

      </map:match> <!-- usecase -->
      
      <!-- Schedule Publication -->
      <map:match type="usecase" pattern="schedule-publication">
        <map:match type="step" pattern="showscreen">
          <map:call resource="scheduler-page">
            <map:parameter name="publication-id" value="{../../1}"/>
            <map:parameter name="uri" value="{../../2}"/>
          </map:call>
          <map:transform src="xslt/scheduler/admin-publication.xsl"/>
          <map:serialize type="html"/>
        </map:match> <!-- step -->
      </map:match> <!-- usecase -->
      
      <!--
      View Logs
      -->
      <map:match type="usecase" pattern="view-logs">
      
        <map:match type="step" pattern="overview">
          <map:generate type="directory" src="pubs/{../../1}/logs/tasks"/>
          <map:transform src="xslt/logs/directory2html.xsl"/>
          <map:transform src="xslt/util/page2xhtml.xsl">
            <map:parameter name="context-prefix" value="{request:contextPath}"/>
          </map:transform>
          <map:serialize/>
        </map:match> <!-- step -->
      
        <map:match type="step" pattern="log">
          <map:act type="request">
            <map:parameter name="parameters" value="true"/>
            <map:generate src="pubs/{../../../1}/logs/tasks/{logfile}"/>
          </map:act>
          <map:transform src="xslt/logs/antlog2html.xsl"/>
          <map:transform src="xslt/logs/antlog2page.xsl"/>
          <map:transform src="xslt/util/page2xhtml.xsl">
            <map:parameter name="context-prefix" value="{request:contextPath}"/>
          </map:transform>
        <map:serialize/>
        </map:match> <!-- step -->
      
      </map:match> <!-- usecase -->
      
    </map:match> <!-- uri -->
    
    </map:pipeline>
      
    <map:pipeline>
    
    <!-- {publication-id}/{area}/{uri}-->
    <map:match pattern="*/*/**">
      
      <!--
      Publish
      -->
      <map:match type="usecase" pattern="publish">
      
        <map:match type="step" pattern="showscreen">
          <map:act type="resource-exists" src="pubs/{../../1}/lenya/content/publishing/publish-screen.xsp">
            <map:generate type="serverpages" label="xsp"
                src="pubs/{../../../1}/lenya/content/publishing/publish-screen.xsp"/>
            <map:call resource="style-publish"/>
          </map:act>
          <map:generate type="serverpages" label="xsp"
              src="content/publishing/publish-screen-usecase.xsp"/>
          <map:call resource="style-publish"/>
        </map:match>
        
        <map:match type="step" pattern="publish">
          <map:act type="task">
            <map:parameter name="publication-id" value="{../../1}"/>
            <map:parameter name="task-id" value="{request-param:task-id}"/>
            <map:redirect-to uri="{request:requestURI}" session="true"/>
          </map:act>
        </map:match>
        
      </map:match>
        
      </map:match>
      
      <map:handle-errors type="500">
        <map:select type="exception">  
          <map:when test="publishing">
            <map:generate src= "sitetreeException.xml"/> 
          </map:when>  
        </map:select>  
        <map:serialize/>
      </map:handle-errors>
        
    </map:pipeline>

    <!-- Create -->
    <map:pipeline>
      <!-- {publication-id}/{area}/{uri}-->
      <map:match pattern="*/*/**">
	
	<map:match type="usecase" pattern="create">
	  
	  <map:match type="step" pattern="showscreen">
	    <map:call resource="usecase-create">
	      <map:parameter name="publication-id" value="{../../1}"/>
	    </map:call>
	  </map:match>
	  
	  <map:match type="step" pattern="create">
	    <map:act type="default-create">
	      <!-- if the action suceeds it returns the referer and we -->
	      <!-- simply redirect to it. -->
	      <map:redirect-to uri="{request:requestURI}"/>
	    </map:act>
	    <!-- otherwise the action could not validate some of the -->
	    <!-- input and we present the upload form again -->
	    <map:call resource="usecase-create">
	      <map:parameter name="publication-id" value="{../../1}"/>
	    </map:call>
	  </map:match>
	  
	</map:match>
      </map:match>
    </map:pipeline>

    <!--Rollback-->
    <map:pipeline>
    <!-- {publication-id}/{area}/{uri}-->
    <map:match pattern="*/*/**">
      <map:match type="usecase" pattern="rollback">

        <map:match type="step" pattern="showscreen">
          <map:generate type="serverpages" src="content/rc/versions-screen.xsp"/>
          <map:transform src="xslt/rc/rollback.xsl"/>
          <map:serialize type="html"/>
        </map:match>

        <map:match type="step" pattern="view">
          <map:mount uri-prefix="{../../1}" src="pubs/{../../1}/sitemap.xmap" check-reload="true" reload-method="synchron"/>
        </map:match>

        <map:match type="step" pattern="rollback">
            <map:act type="rollback">
              <map:redirect-to uri="{location}" session="true"/>
            </map:act>
            <map:redirect-to uri="{}" session="true"/>
        </map:match>
      </map:match>
      
      <!-- CheckOut -->
      <map:match type="usecase" pattern="checkout">
        <map:match type="step" pattern="checkout">
            <map:act type="reserved-checkout">
              <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                <map:parameter name="user" value="{user}"/>
                <map:parameter name="filename" value="{filename}"/>
                <map:parameter name="date" value="{date}"/>
              </map:generate>
              <map:serialize type="xml"/>
            </map:act>
            <map:redirect-to uri="{}" session="true"/>
        </map:match>
      </map:match>

      <!-- CheckIn -->
      <map:match type="usecase" pattern="checkin">
        <map:match type="step" pattern="checkin">
            <map:act type="reserved-checkin">
              <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                <map:parameter name="user" value="{user}"/>
                <map:parameter name="filename" value="{filename}"/>
                <map:parameter name="checkType" value="{checkType}"/>
                <map:parameter name="date" value="{date}"/>
              </map:generate>
              <map:serialize type="xml"/>
            </map:act>
            <map:redirect-to uri="{}" session="true"/>
        </map:match>
      </map:match>
    </map:match>

    </map:pipeline>

  </map:pipelines>
  
</map:sitemap>
