<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- $Id: usecase.xmap,v 1.207 2004/05/10 14:58:29 andreas Exp $ -->

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <!-- =========================== Components ================================ -->
  <map:components>
    
    <map:generators default="file">
      <map:generator label="content,data" logger="sitemap.generator.kupustream" name="kupustream" pool-grow="2" pool-max="16" pool-min="1" src="org.apache.lenya.cms.cocoon.generation.StreamGenerator"/>
    </map:generators>
    <map:transformers default="xslt"/>
    <map:readers default="resource"/>
    <map:serializers default="xhtml">
      <map:serializer logger="sitemap.serializer.htmlnoi" mime-type="text/html" name="htmlnoi" pool-grow="4" pool-max="32" pool-min="4" src="org.apache.cocoon.serialization.HTMLSerializer"> 
	<indent>no</indent>
	<doctype-public>-//W3C//DTD HTML 4.01 Transitional//EN</doctype-public>
	<doctype-system>http://www.w3.org/TR/html4/loose.dtd</doctype-system>
	<encoding>UTF-8</encoding>
      </map:serializer>
    </map:serializers>
    <map:matchers default="wildcard"/>
    <map:actions>
      <map:action name="validate" logger="sitemap.action.validateAction" 
	src="org.apache.lenya.cms.cocoon.acting.ValidateAction" />
      <map:action name="request-parameter-exists" logger="sitemap.action.requestParameterExists" 
	src="org.apache.cocoon.acting.RequestParameterExistsAction" />
      <map:action name="save" logger="sitemap.action.save" 
	src="org.apache.lenya.cms.cocoon.acting.HTMLFormSaveAction" />
      <map:action name="oneformeditorsave" logger="sitemap.action.oneformeditormsave" 
	src="org.apache.lenya.cms.cocoon.acting.OneFormEditorSaveAction" />
      <map:action name="upload" logger="sitemap.action.upload" 
	src="org.apache.lenya.cms.cocoon.acting.UploadAction" />
      <map:action name="document-id-exists" logger="sitemap.action.document-id-exists" 
	src="org.apache.lenya.cms.cocoon.acting.DocumentIdExistsAction" />
    </map:actions>


    <map:selectors>
      <map:selector logger="sitemap.selector.exception" name="exception" 
	src="org.apache.cocoon.selection.ExceptionSelector">
        <exception class="org.apache.lenya.cms.task.ExecutionException" name="execution" unroll="true"/>
        <exception class="org.apache.tools.ant.BuildException" name="build" unroll="true"/>
        <exception class="org.xml.sax.SAXParseException" name="sax-parsing"/>
        <exception class="org.xml.sax.SAXException" name="sax" unroll="true"/>
        <exception class="org.apache.cocoon.ResourceNotFoundException" name="resourcenotfound"/>
        <exception class="org.apache.cocoon.ProcessingException" name="processing" unroll="true"/>
        <exception class="org.apache.lenya.cms.publishing.ParentNodeNotFoundException"
          name="parent-node-not-found"/>
        <!--         <exception class="org.apache.lenya.cms.publishing.PublishingException" name="publishing"/> -->
        <!--         <exception class="org.apache.lenya.cms.publication.SiteTreeException" name="sitetree"/> -->
      </map:selector>
      <map:selector name="request-method" logger="sitemap.selector.request-method" src="org.apache.cocoon.selection.RequestMethodSelector"/>
    </map:selectors>
    
  </map:components>
  
  <!-- =========================== Views ================================= -->

  <map:views>
    <map:view from-label="aggregation" name="aggregation">
      <map:serialize type="xml"/>
    </map:view>
    <map:view from-label="xsp" name="xsp">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>
  
  <!-- =========================== Resources ================================ -->
  <map:resources>
    <map:resource name="style-cms-page">
      <map:transform type="i18n">      
        <map:parameter name="locale" value="{request:locale}"/>
      </map:transform>    
      <map:transform src="xslt/util/page2xhtml.xsl">
        <map:parameter name="contextprefix" value="{request:contextPath}"/>
      </map:transform>
      <map:transform src="xslt/util/strip_namespaces.xsl"/>
      <!-- NOTE: iso-8859-1 is necessary for the form editors, else special characters won't be handled correctly -->
      <map:serialize type="xhtml-iso-8859-1"/>
    </map:resource>
    
    <map:resource name="cms-screen-xml">
      
      <!-- use publication-specific schema if available -->
      <map:select type="resource-exists">
        <map:when test="pubs/{publication-id}/lenya/content/{serverpage}">
          <map:generate src="pubs/{publication-id}/lenya/content/{serverpage}" type="serverpages"/>
        </map:when>
        <map:otherwise>
          <map:generate src="content/{serverpage}" type="serverpages"/>
        </map:otherwise>
      </map:select>
      
      <map:select type="resource-exists">
        <map:when test="pubs/{publication-id}/lenya/xslt/{stylesheet}">
          <map:transform type="xalan" src="pubs/{publication-id}/lenya/xslt/{stylesheet}">
            <map:parameter name="use-request-parameters" value="true"/>
          </map:transform>
        </map:when>
        <map:otherwise>
          <map:transform type="xalan" src="xslt/{stylesheet}">
            <map:parameter name="use-request-parameters" value="true"/>
          </map:transform>
        </map:otherwise>
      </map:select>
      
    </map:resource>
    
    <map:resource name="cms-screen">
      <map:call resource="cms-screen-xml">
        <map:parameter name="publication-id" value="{publication-id}"/>
        <map:parameter name="serverpage" value="{serverpage}"/>
        <map:parameter name="stylesheet" value="{stylesheet}"/>
      </map:call>
      <map:call resource="style-cms-page"/>
    </map:resource>
    
    
  </map:resources>
  
  <!-- =========================== Pipelines ================================ -->
  <!-- FIXME: Reorder the pipelines in here neatly. Maybe alphabetically? -->
  <map:pipelines>
  
    
    <!-- =================================================================== -->
    <!-- Notification Pipelines -->
    <!-- =================================================================== -->
    
    <map:pipeline>
      
      <!-- notification/{publication-id}/{usecase}.xml -->
      <map:match pattern="notification/*/*.xml">
        <map:select type="resource-exists">
          <map:when test="pubs/{1}/config/notification/notification.xconf">
            <map:generate src="pubs/{1}/config/notification/notification.xconf"/>
          </map:when>
          <map:otherwise>
            <map:generate src="config/notification/notification.xconf"/>
          </map:otherwise>      
        </map:select>
        <map:transform src="xslt/notification/notification2message.xsl">
          <map:parameter name="usecase" value="{2}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- notification/{publication-id}/{usecase}.xsl -->
      <map:match pattern="notification/*/*.xsl">
        <map:generate src="cocoon:/notification/{1}/{2}.xml"/>
        <map:transform src="xslt/notification/message2xslt.xsl">
          <map:parameter name="usecase" value="{2}"/>
          <map:parameter name="server-uri" value="http://{request:serverName}:{request:serverPort}"/>
          <map:parameter name="document-url" value="{request:contextPath}/{page-envelope:publication-id}/{page-envelope:area}{page-envelope:document-url}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      
    </map:pipeline>

    <map:pipeline>
      <map:match pattern="kupu-stream">
        <map:generate type="kupustream"/>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
    
    <!-- =================================================================== -->
    <!-- Usecase Pipelines -->
    <!-- =================================================================== -->
    
    <map:pipeline type="noncaching">
      
      <!-- {publication-id}/{area}/{uri}-->
      <map:match pattern="*/*/**">
        
        <!-- mount publication-specific usecase sitemap -->
        <map:match type="usecase" pattern="*">
          <map:act src="pubs/{../1}/usecase-{1}.xmap" type="resource-exists">
            <map:mount check-reload="true" reload-method="synchron" src="pubs/{../../1}/usecase-{../1}.xmap" uri-prefix="{../../1}"/>
          </map:act>
        </map:match>
        
        <!-- Scheduler -->
        <!-- Schedule Document: View, Add, Edit, Delete Jobs -->
        <map:match pattern="schedule" type="usecase">
          
          <!-- show scheduler screen -->
          <map:match pattern="showscreen" type="step">
            <map:call resource="cms-screen-xml">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="serverpage" value="scheduler/screen.xsp"/>
              <map:parameter name="stylesheet" value="scheduler/screen.xsl"/>
            </map:call>
            <!--
            <map:transform src="cocoon:/notification/{../../1}/publish.xsl"/>
            -->
            <map:transform src="cocoon://scheduler/{../../1}/{page-envelope:area}/{../../3}.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <!-- other steps: add job (redirect to page) -->
          <map:generate src="cocoon://scheduler/publication/{../1}"/>
          <map:transform src="xslt/util/redirect.xsl">
            <map:parameter name="url" value="{request-param:referer}"/>
          </map:transform>
          <map:serialize/>
          
        </map:match>

        <!-- usecase -->
        <!-- View Logs -->
        <map:match pattern="view-logs" type="usecase">
          
          <map:match pattern="overview" type="step">
            <map:generate src="pubs/{../../1}/logs/tasks" type="directory"/>
            <map:transform src="xslt/logs/directory2html.xsl"/>
            <map:transform src="xslt/util/page2xhtml.xsl">
              <map:parameter name="context-prefix" value="{request:contextPath}"/>
            </map:transform>
            <map:serialize/>
          </map:match>
          
          <!-- step -->
          <map:match pattern="log" type="step">
            <map:act type="request">
              <map:parameter name="parameters" value="true"/>
              <map:generate src="pubs/{../../../1}/logs/tasks/{logfile}"/>
            </map:act>
            <map:transform src="xslt/logs/antlog2html.xsl"/>
            <map:transform src="xslt/logs/antlog2page.xsl"/>
            <map:transform src="xslt/util/page2xhtml.xsl">
              <map:parameter name="context-prefix" value="{request:contextPath}"/>
            </map:transform>
            <map:serialize/>
          </map:match>
          <!-- step -->
          
        </map:match>
        <!-- usecase -->


        <!-- Submit -->
        <map:match pattern="submit" type="usecase">
          <map:match pattern="showscreen" type="step">
            <map:call resource="cms-screen-xml">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="serverpage" value="publishing/submit-screen.xsp"/>
              <map:parameter name="stylesheet" value="publishing/submit-screen.xsl"/>
            </map:call>
            <map:transform src="cocoon:/notification/{../../1}/submit.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
        </map:match>
        <!-- / Submit -->
        
        <!-- Reject -->
        <map:match pattern="reject" type="usecase">
          <map:match pattern="showscreen" type="step">
            <map:call resource="cms-screen-xml">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="serverpage" value="publishing/reject-screen.xsp"/>
              <map:parameter name="stylesheet" value="publishing/reject-screen.xsl"/>
            </map:call>
            <map:transform src="cocoon:/notification/{../../1}/reject.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
        </map:match>
        <!-- / Reject -->
        
        <!-- Publish -->
        <map:match pattern="publish" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:call resource="cms-screen-xml">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="serverpage" value="publishing/screen.xsp"/>
              <map:parameter name="stylesheet" value="{fallback:publishing/publish-screen.xsl}"/>
            </map:call>
            <map:transform src="cocoon:/notification/{../../1}/publish.xsl"/>
            <map:transform src="cocoon://scheduler/{../../1}/{page-envelope:area}/{../../3}.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="show-referenced-documents" type="step">
	    <map:generate src="content/publishing/referenced-documents.xsp" type="serverpages"/>
	    <map:transform type="xalan" src="xslt/publishing/referenced-documents.xsl">
	      <map:parameter name="use-request-parameters" value="true"/>
	    </map:transform>
	    <map:serialize type="text"/>
          </map:match>
          
          <map:match pattern="publish" type="step">
            <map:act type="task">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:parameter name="properties.export.server-port" value="{request:serverPort}"/>
              <map:parameter name="properties.export.context-path" value="{request:contextPath}"/>
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>
        <!-- /Publish -->
        
        <!-- create -->      
        <map:match pattern="create" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:call resource="cms-screen">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="serverpage" value="authoring/create.xsp"/>
              <map:parameter name="stylesheet" value="authoring/create.xsl"/>
            </map:call>
          </map:match>
          
          <map:match pattern="create" type="step">
            <!-- Make sure the child-id doesn't exist yet -->
            <map:act type="document-id-exists">
              <map:parameter name="document-id" value="{request-param:properties.create.parent-id}/{request-param:properties.create.child-id}"/>
              <map:act type="task">
                <map:parameter name="task-id" value="create"/>
                <map:generate type="serverpages" src="{fallback:content/util/redirect-document.xsp}">
                  <map:parameter name="document-id" value="{request-param:properties.create.parent-id}/{request-param:properties.create.child-id}"/>
                  <map:parameter name="language" value="{request-param:properties.create.language}"/>
                </map:generate>
                <map:transform src="{fallback:xslt/util/redirect-document.xsl}"/>
                <map:serialize/>
              </map:act>
              <map:call resource="cms-screen">
                <map:parameter name="publication-id" value="{../../1}"/>
                <map:parameter name="serverpage" value="authoring/create.xsp"/>
                <map:parameter name="stylesheet" value="authoring/create.xsl"/>
              </map:call>
              </map:act>
              <map:redirect-to uri="{request:requestURI}?doctype={request-param:properties.create.doctype}&amp;lenya.usecase=create&amp;lenya.step=showscreen&amp;status=duplicate-id"/>
          </map:match>
          
        </map:match>

        
        <!-- create-language -->
        <map:match pattern="create-language" type="usecase">

          <map:match pattern="showscreen" type="step">
            <map:call resource="cms-screen">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="serverpage" value="authoring/create-language.xsp"/>
              <map:parameter name="stylesheet" value="authoring/create-language.xsl"/>
            </map:call>
          </map:match>
          
          <map:match pattern="create" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="create-language"/>
              <map:parameter name="properties.create.doctype" value="{page-envelope:document-type}"/>
              <map:generate type="serverpages" src="{fallback:content/util/redirect-document.xsp}">
                <map:parameter name="language" value="{request-param:properties.create.new.language}"/>
              </map:generate>
              <map:transform src="{fallback:xslt/util/redirect-document.xsl}"/>
              <map:serialize/>
            </map:act>
          </map:match>

        </map:match>
        
        <!-- ************************************************************** 
         ** Kupu                                                                              
         **                                                                                       
         ** NOTE: page-envelope:document-path depends on the       
         **           publication-specific DocumentIdToPathMapper which  
         **           is configured within config/publication.xconf      
         ************************************************************** -->
        <map:match pattern="kupu" type="usecase">
          <map:match pattern="open" type="step">
            <map:match pattern="*/authoring/**.html">
              <!-- Check for Kupu-->
              <map:act type="resource-exists" src="resources/kupu/common/kupueditor.js">

                <map:act type="reserved-checkout">
                  <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                    <map:parameter name="user" value="{user}"/>
                    <map:parameter name="filename" value="{filename}"/>
                    <map:parameter name="date" value="{date}"/>
                  </map:generate>
                  <map:transform src="xslt/rc/rco-exception.xsl"/>
                  <map:call resource="style-cms-page"/>
                </map:act>

                <map:generate src="resources/kupu/apache-lenya/kupumacros.html"/>
                <map:transform src="resources/kupu/apache-lenya/kupumacros-xhtml.xsl">
                  <map:parameter name="contentfile" value="{page-envelope:context-prefix}/{../1}/authoring/{../2}.html?lenya.usecase=kupu&amp;lenya.step=content"/>
                  <map:parameter name="context" value="{request:contextPath}"/>
                  <map:parameter name="document-path" value="{page-envelope:document-path}"/>
                  <map:parameter name="root" value="{page-envelope:context-prefix}"/>
                  <map:parameter name="save-destination" value="{page-envelope:context-prefix}/{../1}/authoring/{../2}.html?lenya.usecase=kupu&amp;lenya.step=save"/>
                  <map:parameter name="reload-on-save" value="0"/> <!-- 1 means you can see the saving -->
                  <map:parameter name="use-css" value="1"/>
                  <map:parameter name="redirect-to" value="{page-envelope:document-name}.html"/>
                </map:transform>
	        <map:serialize type="html"/>
              </map:act>
              <map:generate src="resources/misc/kupu/download.xhtml"/>
              <map:call resource="style-cms-page"/>
            </map:match>
          </map:match>

          <map:match pattern="content" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:generate src="pubs/{1}/content/authoring/{page-envelope:document-path}"/>
              <map:transform src="resources/kupu/apache-lenya/kupucontent-xhtml.xsl">
                <map:parameter name="css" value="{page-envelope:context-prefix}/{1}/authoring/css/page.css"/>
              </map:transform>
              <map:transform src="xslt/util/strip_namespaces.xsl"/>
                <map:serialize type="xhtml"/>
            </map:match>
          </map:match>

          <!-- 
               Kupu uses PUT to transmit the edited file for save.
               The problem is, Kupu removes namespace information. 
               That means we can not use the StreamGenerator, because 
               it complains about an unbound element.			
          -->
          <map:match pattern="save" type="step">
            <map:select type="request-method">  
              <map:when test="PUT">

                <map:act type="reserved-checkout-test">
                  <map:generate type="serverpages" src="../../content/rc/{exception}.xsp">
                    <map:parameter name="user" value="{user}"/>
                    <map:parameter name="filename" value="{filename}"/>
                    <map:parameter name="date" value="{date}"/>
                  </map:generate>
                  <map:transform src="../../xslt/rc/rco-exception.xsl"/>
                  <map:call resource="style-cms-page"/>
                </map:act>

                <map:aggregate element="edit-envelope">
                  <map:part element="edited" src="cocoon:/kupu-stream"/>
                  <map:part element="original" src="pubs/{page-envelope:publication-id}/content/authoring/{page-envelope:document-path}"/>
                </map:aggregate>

                <map:transform src="resources/kupu/apache-lenya/kupusave-xhtml.xsl"/>

                <map:act type="reserved-checkin">
                  <map:generate src="content/rc/{exception}.xsp" type="serverpages">
                    <map:parameter name="user" value="{user}"/>
                    <map:parameter name="filename" value="{filename}"/>
                    <map:parameter name="checkType" value="{checkType}"/>
                    <map:parameter name="date" value="{date}"/>
                  </map:generate>
                  <map:transform src="xslt/rc/rco-exception.xsl"/>
                  <map:serialize/>
                </map:act>

                <map:transform src="xslt/authoring/edit/addSourceTags.xsl">
                  <map:parameter name="source" value="pubs/{page-envelope:publication-id}/content/authoring/{page-envelope:document-path}"/>
                </map:transform>
                <map:transform type="write-source"/>
			
                <!-- Trigger workflow with *edit* action -->
                <map:act type="workflow">
                  <map:parameter name="area" value="{page-envelope:area}"/>
                  <map:parameter name="document-id" value="{page-envelope:document-id}"/>
                  <map:parameter name="language" value="{page-envelope:document-language}"/>
                  <map:parameter name="event" value="edit"/>
                </map:act> 

                <map:serialize type="xml" status-code="204"/>
              </map:when>						
            </map:select>  				
          </map:match>

        </map:match>

        <!-- ************************************************************** -->
        <!-- ********  /Kupu Editor *************************************** -->
        <!-- ************************************************************** -->

        <!-- ************************************************************** -->
        <!-- ** HTML One Form Editor                                     ** -->
        <!-- **                                                          ** -->
        <!-- ** NOTE: page-envelope:document-path depends on the         ** -->
        <!-- **       publication specific DocumentIdToPathMapper which  ** -->
        <!-- **       is configured within config/publication.xconf      ** -->
        <!-- ************************************************************** -->
	<map:match pattern="1formedit" type="usecase">

	  <map:match pattern="open" type="step">
	    <map:match pattern="*/authoring/**.html">
              <map:act type="reserved-checkout">
                <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                  <map:parameter name="user" value="{user}"/>
                  <map:parameter name="filename" value="{filename}"/>
                  <map:parameter name="date" value="{date}"/>
                </map:generate>
		<map:transform src="xslt/rc/rco-exception.xsl"/>
		<map:call resource="style-cms-page"/>
	      </map:act>
	      <map:generate src="pubs/{1}/content/authoring/{page-envelope:document-path}"/>
	      <map:transform src="xslt/authoring/edit/oneform.xsl">
		<map:parameter name="docid" value="{page-envelope:document-id}"/>
		<map:parameter name="language" value="{page-envelope:document-language}"/>
	      </map:transform>
	      <map:call resource="style-cms-page"/>
	    </map:match>
	  </map:match>
	
	  <map:match pattern="close" type="step">
	    <map:match pattern="*/authoring/**.html">
	      <map:act type="request-parameter-exists">
		<map:parameter name="parameters" value="save"/>
		
		<map:act type="oneformeditorsave">
		  <map:parameter name="file" value="pubs/{../1}/work/oneformeditor/authoring/{../2}.xml"/>
		  <map:parameter name="encoding" value="ISO-8859-1"/>
		  <map:parameter name="schema" value="pubs/{../1}/config/doctypes/schemas/{page-envelope:document-type}.rng"/>
		  
		  <map:generate src="pubs/{../../1}/content/authoring/{page-envelope:document-path}"/>
		  <map:transform src="xslt/authoring/edit/oneform.xsl">
		    <map:parameter name="docid" value="{page-envelope:document-id}"/>
		    <map:parameter name="language" value="{page-envelope:document-language}"/>
		    <map:parameter name="message" value="{message}"/>
		  </map:transform>
		  <map:call resource="style-cms-page"/>
		</map:act>

		<!-- Validation succeeded -->
		<!-- Save: Overwrite original file  -->
		<!--<map:transform src="xslt/authoring/edit/unnumberTags.xsl"/>-->
		<map:generate src="pubs/{../1}/work/oneformeditor/authoring/{../2}.xml"/>
		<map:transform src="xslt/authoring/edit/addSourceTags.xsl">
		  <map:parameter name="source" value="pubs/{../1}/content/authoring/{page-envelope:document-path}"/>
		</map:transform>
		<map:transform type="write-source"/>
		<map:transform src="xslt/authoring/edit/redirect-to.xsl">
		  <map:parameter name="uri" value="{page-envelope:context-prefix}/{../1}/authoring/{../2}.html?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
		</map:transform>
		<map:act type="workflow">
		  <map:parameter name="area" value="{page-envelope:area}"/>
		  <map:parameter name="document-id" value="{page-envelope:document-id}"/>
		  <map:parameter name="language" value="{page-envelope:document-language}"/>
		  <map:parameter name="event" value="edit"/>
		</map:act>
		<map:serialize type="htmlnoi" />
	      </map:act>
	      
              <map:generate src="pubs/{1}/publication.xml"/> <!-- used as dummy file -->
	      <map:transform src="xslt/authoring/edit/redirect-to.xsl">
		<map:parameter name="uri" value="{page-envelope:context-prefix}/{1}/authoring/{2}.html?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=false"/>
	      </map:transform>
	      <map:serialize type="html" />
	    </map:match>
	  </map:match>

	</map:match>
	<!-- ************************************************************** -->
	<!-- ********  /HTML One Form Editor ****************************** -->
	<!-- ************************************************************** -->
    
        <!-- ************************************************************** -->
        <!-- ** HTML Form Editor                                         ** -->
        <!-- **                                                          ** -->
        <!-- ** NOTE: page-envelope:document-path depends on the         ** -->
        <!-- **       publication specific DocumentIdToPathMapper which  ** -->
        <!-- **       is configured within config/publication.xconf      ** -->
        <!-- ************************************************************** -->
        <map:match pattern="edit" type="usecase">
          <map:match pattern="open" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:act type="reserved-checkout">
                <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                  <map:parameter name="user" value="{user}"/>
                  <map:parameter name="filename" value="{filename}"/>
                  <map:parameter name="date" value="{date}"/>
                </map:generate>
                <map:transform src="xslt/rc/rco-exception.xsl"/>
                <map:call resource="style-cms-page"/>
              </map:act>
              <map:generate src="pubs/{1}/content/authoring/{page-envelope:document-path}"/>
              <map:transform src="xslt/authoring/edit/numberTags.xsl"/>
              <map:transform src="xslt/authoring/edit/addSourceTags.xsl">
                <map:parameter name="source" value="pubs/{1}/work/editor/authoring/{page-envelope:document-path}"/>
              </map:transform>
              <map:transform type="write-source"/>
              <map:transform src="xslt/authoring/edit/removeSourceTags.xsl"/>
              <map:transform src="pubs/{1}/lenya/xslt/formeditor/{request-param:form}.xsl">
                <map:parameter name="docid" value="{page-envelope:document-path}"/>
                <map:parameter name="form" value="{request-param:form}"/>
              </map:transform>
              <map:transform src="{fallback:xslt/authoring/edit/form-layout.xsl}">
                <map:parameter name="contextPrefix" value="{page-envelope:context-prefix}"/>
              </map:transform>
              <map:call resource="style-cms-page"/>


            </map:match>
          </map:match>

          <map:match pattern="close" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:act type="save">
                <map:parameter name="file" value="pubs/{1}/work/editor/authoring/{page-envelope:document-path}"/>
                <map:parameter name="schema" value="pubs/{1}/config/doctypes/schemas/{request-param:form}.rng"/>
                <map:parameter name="unnumberTagsXSL" value="xslt/authoring/edit/unnumberTags.xsl"/>

                <!-- Continue editing: Insert, Delete, etc. -->
                <map:generate src="pubs/{../1}/work/editor/authoring/{page-envelope:document-path}"/>
                <map:transform src="xslt/authoring/edit/unnumberTags.xsl"/>

                <map:transform src="xslt/authoring/edit/numberTags.xsl"/>
                <map:transform src="xslt/authoring/edit/addSourceTags.xsl">
                  <map:parameter name="source" value="pubs/{../1}/work/editor/authoring/{page-envelope:document-path}"/>
                </map:transform>
                <map:transform type="write-source"/>
                <map:transform src="xslt/authoring/edit/removeSourceTags.xsl"/>
                <map:transform src="pubs/{../1}/lenya/xslt/formeditor/{request-param:form}.xsl">
                  <map:parameter name="docid" value="{page-envelope:document-path}"/>
                  <map:parameter name="form" value="{request-param:form}"/>
                  <map:parameter name="message" value="{message}"/>
                </map:transform>
                <map:transform src="{fallback:xslt/authoring/edit/form-layout.xsl}">
                  <map:parameter name="contextPrefix" value="{page-envelope:context-prefix}"/>
                  <map:parameter name="edit" value="{editSelect}"/>
                </map:transform>
                <map:call resource="style-cms-page"/>
              </map:act>

              <!-- Stop Editing: Save and Cancel -->
              <!-- If temporary file exists, then SAVE else CANCEL -->
              <map:act type="resource-exists" src="pubs/{1}/work/editor/authoring/{page-envelope:document-path}">
                <map:generate src="pubs/{../1}/work/editor/authoring/{page-envelope:document-path}"/>
                <map:transform src="xslt/authoring/edit/unnumberTags.xsl"/>

                <map:transform src="xslt/authoring/edit/addSourceTags.xsl">
                  <map:parameter name="source" value="pubs/{../1}/content/authoring/{page-envelope:document-path}"/>
                </map:transform>
                <map:transform type="write-source"/> 
              
                <map:act type="workflow">
                  <map:parameter name="area" value="{page-envelope:area}"/>
                  <map:parameter name="document-id" value="{page-envelope:document-id}"/>
                  <map:parameter name="language" value="{page-envelope:document-language}"/>
                  <map:parameter name="event" value="edit"/>
                </map:act>

                <map:transform src="xslt/authoring/edit/redirect-to.xsl">
                  <map:parameter name="uri" value="{page-envelope:context-prefix}/{../1}/authoring/{../2}.html?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
                </map:transform>
                <map:serialize type="html" />
              </map:act>

              <!-- If CANCEL then the document also needs to be checked in -->
              <map:act type="reserved-checkin">
                <map:parameter name="backup" value="false"/>
                <map:generate src="content/rc/{exception}.xsp" type="serverpages">
                  <map:parameter name="user" value="{user}"/>
                  <map:parameter name="filename" value="{filename}"/>
                  <map:parameter name="checkType" value="{checkType}"/>
                  <map:parameter name="date" value="{date}"/>
                </map:generate>
                <map:transform src="xslt/rc/rco-exception.xsl"/>
                <map:serialize/>
              </map:act>
              
              <map:generate src="pubs/{1}/publication.xml"/> <!-- used as dummy file -->
              <map:transform src="xslt/authoring/edit/redirect-to.xsl">
                <map:parameter name="uri" value="{page-envelope:context-prefix}/{1}/authoring/{2}.html"/>
              </map:transform>
              <map:serialize type="html" />
            </map:match>
          </map:match>
        </map:match>
        <!-- ************************************************************** -->
        <!-- ********  /HTML Form Editor ********************************** -->
        <!-- ************************************************************** -->



        
        <!-- ************************************************************** -->
        <!-- ** Xopus                                                    ** -->
        <!-- **                                                          ** -->
        <!-- ** NOTE: page-envelope:document-path depends on the         ** -->
        <!-- **       publication specific DocumentIdToPathMapper which  ** -->
        <!-- **       is configured within config/publication.xconf      ** -->
        <!-- ************************************************************** -->
        <map:match pattern="xopus" type="usecase">
          <map:match pattern="open" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:act type="resource-exists" src="../../ROOT/{xopus:context}/xopus/xopus.js"> <!-- Check for Xopus -->
              
                <map:act type="reserved-checkout">
                  <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                    <map:parameter name="user" value="{user}"/>
                    <map:parameter name="filename" value="{filename}"/>
                    <map:parameter name="date" value="{date}"/>
                  </map:generate>
                  <map:transform src="xslt/rc/rco-exception.xsl"/>
                  <map:transform src="xslt/util/page2xhtml.xsl">
                    <map:parameter name="contextprefix" value="{request:contextPath}"/>
                  </map:transform>
                  <map:call resource="style-cms-page"/>
                </map:act>
                
                <map:generate src="content/util/empty.xml"/>
                <map:transform src="xslt/authoring/edit/xopus-xhtml.xsl">
                  <map:parameter name="contextPrefix" value="{request:contextPath}"/>
                  <map:parameter name="publicationId" value="{page-envelope:publication-id}"/>
                  <map:parameter name="completeArea" value="authoring"/>
                  <map:parameter name="documentUrl" value="{page-envelope:document-url}"/>
                  <map:parameter name="documentType" value="{request-param:doctype}"/>
                  <map:parameter name="xopusContext" value="{xopus:context}"/>
                </map:transform>
                <!-- NOTE: IE or Xopus doesn't appreciate the DTD which is being inserted by Cocoon -->
                <map:serialize type="html-no-dtd"/>
              </map:act>
              <map:generate src="resources/misc/xopus/download.xhtml"/>
              <map:call resource="style-cms-page"/>
            </map:match>
          </map:match>
          
          
          <map:match pattern="xml" type="step">
            <map:match pattern="*/*/**.html">
              <map:select type="request-method">
                <map:when test="POST"> <!-- Save -->

                  <!-- test if the document is checked out -->
        	        <map:act type="reserved-checkout-test">
            	      <map:generate type="serverpages" src="../../content/rc/{exception}.xsp">
                	    <map:parameter name="user" value="{user}"/>
                    	<map:parameter name="filename" value="{filename}"/>
        	            <map:parameter name="date" value="{date}"/>
            	      </map:generate>
                	  <map:transform src="../../xslt/rc/rco-exception.xsl"/>
        	          <map:call resource="style-cms-page"/>
                	</map:act>
        
                  <map:generate type="stream"/>
                  <map:transform src="xslt/authoring/edit/addSourceTags.xsl">
                    <map:parameter name="source" value="pubs/{1}/content/{2}/{page-envelope:document-path}"/>
                    <!--<map:parameter name="source" value="pubs/{1}/test-xopus.xml"/>-->
                  </map:transform>
                  <map:transform type="write-source"/>
                  <map:serialize type="xml"/>
                </map:when>
                <map:otherwise> <!-- GET: Open -->
                  <map:generate src="pubs/{1}/content/{2}/{page-envelope:document-path}"/>
                  <map:serialize type="xml"/>
                </map:otherwise>
              </map:select>
            </map:match>
          </map:match>
          
          
          <map:match pattern="xsd" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:generate src="pubs/{1}/config/doctypes/schemas/{request-param:doctype}.xsd"/>
              <map:serialize type="xml"/>
            </map:match>
          </map:match>
          <map:match pattern="xslt" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:generate src="pubs/{1}/lenya/xslt/xopus/{request-param:doctype}.xsl"/>
              <map:serialize type="xml"/>
            </map:match>
          </map:match>
        </map:match>
        <!-- ************************************************************** -->
        <!-- ********  /Xopus Editor ************************************** -->
        <!-- ************************************************************** -->
        

        <!-- This is the generic asset upload matcher -->
        <map:match pattern="asset" type="usecase">
          <map:match pattern="showscreen" type="step">
            <map:select type="request-parameter">  
              <map:parameter name="parameter-name" value="insert"/>
              <map:when test="true">
                <map:act type="reserved-checkout">
                  <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                    <map:parameter name="user" value="{user}"/>
                    <map:parameter name="filename" value="{filename}"/>
                    <map:parameter name="date" value="{date}"/>
                  </map:generate>
                  <map:transform src="xslt/rc/rco-exception.xsl"/>
                  <map:call resource="style-cms-page"/>
                </map:act>
              </map:when>
              <map:otherwise>
              </map:otherwise>
            </map:select>
            <map:call resource="cms-screen">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="serverpage" value="authoring/asset.xsp"/>
              <map:parameter name="stylesheet" value="authoring/asset.xsl"/>
            </map:call>
          </map:match>

          <map:match pattern="showdots" type="step">
            <map:generate src="cocoon://{../../1}/lenya-image-upload/{../../2}/{../../3}"/>
            <map:serialize  type="html"/>
          </map:match>

          <map:match pattern="upload" type="step">
            <map:act type="upload">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:redirect-to session="true" uri="{request:requestURI}?lenya.usecase=info-assets&amp;lenya.step=showscreen"/>
            </map:act>
            <map:generate src="{fallback:content/authoring/asset.xsp}" type="serverpages"/>
            <map:transform src="{fallback:xslt/authoring/asset.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="error" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>

          <map:match pattern="insert" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:redirect-to session="true" uri="{request:requestURI}?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
            </map:act>
          </map:match>

          <map:match pattern="upload-and-insert" type="step">
            <map:act type="upload">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:act type="task">
                <map:parameter name="task-id" value="{request-param:task-id}"/>
                <map:redirect-to session="true" uri="{request:requestURI}?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
              </map:act>
            </map:act>
            <map:act type="reserved-checkin">
              <map:parameter name="backup" value="false"/>
              <map:generate src="content/rc/{exception}.xsp" type="serverpages">
                <map:parameter name="user" value="{user}"/>
                <map:parameter name="filename" value="{filename}"/>
                <map:parameter name="checkType" value="{checkType}"/>
                <map:parameter name="date" value="{date}"/>
              </map:generate>
              <map:transform src="xslt/rc/rco-exception.xsl"/>
              <map:serialize/>
            </map:act>
            <map:generate src="{fallback:content/authoring/asset.xsp}" type="serverpages"/>
            <map:transform src="{fallback:xslt/authoring/asset.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="error" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>

          <map:match pattern="remove" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:redirect-to session="true" uri="{request:requestURI}?lenya.usecase=info-assets&amp;lenya.step=showscreen&amp;lenya.area={request-param:lenya.area}"/>
            </map:act>
          </map:match>
        </map:match>

        <!--Rollback-->
        <map:match pattern="rollback" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/rc/versions-screen.xsp" type="serverpages"/>
            <map:transform src="xslt/rc/rollback.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="view" type="step">
            <map:redirect-to session="true" uri="{page-envelope:context-prefix}/{../../1}/authoring/{../../3}?lenya.step=view-revision&amp;rollbackTime={request-param:rollbackTime}"/>
          </map:match>
          
          <map:match pattern="rollback" type="step">
            <map:act type="rollback">
              <map:act type="workflow">
                <map:parameter name="area" value="{page-envelope:area}"/>
                <map:parameter name="document-id" value="{page-envelope:document-id}"/>
                <map:parameter name="language" value="{page-envelope:document-language}"/>
                <map:parameter name="event" value="edit"/>
              </map:act>
              <map:redirect-to session="true" uri="{location}"/>
            </map:act>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:match>
          
        </map:match>
        
        
        <!-- CheckOut -->
        <map:match pattern="checkout" type="usecase">
          
          <map:match pattern="checkout" type="step">
            <map:act type="reserved-checkout">
              <map:generate src="content/rc/{exception}.xsp" type="serverpages">
                <map:parameter name="user" value="{user}"/>
                <map:parameter name="filename" value="{filename}"/>
                <map:parameter name="date" value="{date}"/>
              </map:generate>
              <map:transform src="xslt/rc/rco-exception.xsl"/>
              <map:serialize/>
            </map:act>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:match>
          
        </map:match>
        
        
        <!-- CheckIn -->
        <map:match pattern="checkin" type="usecase">
          
          <map:match pattern="checkin" type="step">
            <map:act type="reserved-checkin">
              <map:parameter name="backup" value="{request-param:backup}"/>
              <map:generate src="content/rc/{exception}.xsp" type="serverpages">
                <map:parameter name="user" value="{user}"/>
                <map:parameter name="filename" value="{filename}"/>
                <map:parameter name="checkType" value="{checkType}"/>
                <map:parameter name="date" value="{date}"/>
              </map:generate>
              <map:transform src="xslt/rc/rco-exception.xsl"/>
              <map:serialize/>
            </map:act>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:match>
          
        </map:match>
        

        <map:match pattern="removelabel" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/authoring/removelabel.xsp" type="serverpages"/>
            <map:transform src="xslt/authoring/removelabel.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>

          <map:match pattern="removelabel" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:generate type="serverpages" src="{fallback:content/util/redirect-document.xsp}">
                <map:parameter name="language" value="{page-envelope:default-language}"/>
              </map:generate>
              <map:transform src="{fallback:xslt/util/redirect-document.xsl}"/>
              <map:serialize/>
            </map:act>
          </map:match>

        </map:match>
        
        
        <!-- Info area use cases start here -->
        
        <map:match pattern="archive" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/archive.xsp" type="serverpages"/>
            <map:transform src="xslt/info/archive.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="archive" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request-param:parenturl}"/>
            </map:act>
          </map:match>
          
        </map:match>
        
        
        <map:match pattern="restore" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/restore.xsp" type="serverpages"/>
            <map:transform src="xslt/info/restore.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="restore" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:contextPath}/{../../../1}/{../../../2}/"/>
            </map:act>
          </map:match>
          
        </map:match>
        

        <map:match pattern="copy" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/copy.xsp" type="serverpages"/>
            <map:transform src="xslt/info/copy.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="copy" type="step">
            <map:act type="session-propagator">
              <map:parameter name="org.apache.lenya.cms.info.cutdocumentid" value=""/>
              <map:parameter name="org.apache.lenya.cms.info.firstdocid" value="{request-param:documentid}"/>
              <map:parameter name="org.apache.lenya.cms.info.firstarea" value="{request-param:area}"/>
              <map:parameter name="org.apache.lenya.cms.info.action" value="{request-param:action}"/>
            </map:act>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:match>
          
        </map:match>
        
        
        <map:match pattern="cut" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/cut.xsp" type="serverpages"/>
            <map:transform src="xslt/info/cut.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="cut" type="step">
            <map:act type="session-propagator">
              <map:parameter name="org.apache.lenya.cms.info.firstdocid" value="{request-param:documentid}"/>
              <map:parameter name="org.apache.lenya.cms.info.firstarea" value="{request-param:area}"/>
              <map:parameter name="org.apache.lenya.cms.info.cutdocumentid" value="{request-param:documentid}"/>
              <map:parameter name="org.apache.lenya.cms.info.action" value="{request-param:action}"/>
              <map:redirect-to uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>
        
        
        <map:match pattern="deactivate" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="{fallback:content/info/deactivate.xsp}" type="serverpages"/>
            <map:transform src="{fallback:xslt/info/deactivate.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:transform src="cocoon:/notification/{../../1}/deactivate.xsl"/>
            <map:transform src="cocoon://scheduler/{../../1}/{page-envelope:area}/{../../3}.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="deactivate" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>
        
        
        <map:match pattern="delete" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/delete.xsp" type="serverpages"/>
            <map:transform src="xslt/info/delete.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="delete" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request-param:parenturl}"/>
            </map:act>
          </map:match>
          
        </map:match>

        <map:match pattern="move-node" type="usecase">
          <map:match pattern="move-node" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="movenode"/>
              <map:parameter name="properties.movenode.documentid" value="{page-envelope:document-id}"/>
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
        </map:match>
        
        
        <map:match pattern="paste" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/paste.xsp" type="serverpages"/>
            <map:transform src="xslt/info/paste.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="paste" type="step">
            <map:select type="request-parameter">
              <map:parameter name="parameter-name" value="task-id"/>  
              <map:when test="moveDocument">
                <map:act type="session-propagator">
                  <map:parameter name="org.apache.lenya.cms.info.firstdocid" value=""/>
                  <map:parameter name="org.apache.lenya.cms.info.cutdocumentid" value=""/>
                </map:act>
              </map:when>
              <map:otherwise>
                <map:act type="session-propagator">
                  <map:parameter name="org.apache.lenya.cms.info.cutdocumentid" value=""/>
                </map:act>
              </map:otherwise>
            </map:select>
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>

          </map:match>
          
        </map:match>
        
        
        <map:match pattern="rename" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/rename.xsp" type="serverpages"/>
            <map:transform src="xslt/info/rename.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="rename" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request-param:parenturl}"/>
            </map:act>
          </map:match>
          
        </map:match>

        <!-- Rename a Label -->
        <map:match pattern="rename-label" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/util/empty.xml"/>
            <map:transform src="xslt/info/rename-label.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="requesturi" value="{request:requestURI}"/>
              <map:parameter name="area" value="{page-envelope:area}"/>
              <map:parameter name="language" value="{page-envelope:document-language}"/>
              <map:parameter name="label" value="{page-envelope:document-label}"/>
              <map:parameter name="documentid" value="{page-envelope:document-id}"/>
              <map:parameter name="taskid" value="rename-label"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="rename-label" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>
        
        <!-- initialize the workflow -->
        <map:match type="usecase" pattern="initworkflow">
          <map:act type="task">
            <map:parameter name="task-id" value="ant"/>
            <map:parameter name="target" value="initworkflow"/>
            <map:parameter name="properties.initworkflow.document-id" value="{page-envelope:document-id}"/>
            <map:parameter name="properties.initworkflow.document-type" value="{page-envelope:document-type}"/>
            <map:parameter name="properties.initworkflow.language" value="{page-envelope:document-language}"/>
            <map:parameter name="properties.initworkflow.user-id" value="{access-control:user-id}"/>
            <map:parameter name="properties.initworkflow.machine-ip" value="{access-control:ip-address}"/>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:act>
        </map:match>

        <map:match pattern="transition" type="usecase">
          <map:act type="task">
            <map:parameter name="publication-id" value="{../1}"/>
            <map:parameter name="task-id" value="empty"/>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:act>
        </map:match>
        
      </map:match>
      
      <map:handle-errors>
        <map:select type="exception">
          <map:when test="parent-node-not-found">
            <map:generate src="content/util/empty.xml"/>
            <map:transform src="xslt/exception/parent-node-not-found.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:when>
      <map:otherwise>
        <map:generate type="notifying"/>
        <map:transform src="../stylesheets/system/error2html.xslt">
          <map:parameter name="contextPath" value="{request:contextPath}"/>
        </map:transform>
      </map:otherwise>
        </map:select>
            <map:serialize type="html"/>
      </map:handle-errors>
      
    </map:pipeline>
    
  </map:pipelines>
  
</map:sitemap>
