<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- $Id$ -->

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <!-- =========================== Components ================================ -->
  <map:components>
    
    <map:generators default="file"/>
    <map:transformers default="xslt"/>
    <map:readers default="resource"/>
    <map:serializers default="xhtml"/>
    <map:matchers default="wildcard"/>
    <map:actions/>

    <map:selectors>
      <map:selector logger="sitemap.selector.exception" name="exception" src="org.apache.cocoon.selection.ExceptionSelector">
        <exception class="org.apache.lenya.cms.task.ExecutionException" name="execution" unroll="true"/>
        <exception class="org.apache.tools.ant.BuildException" name="build" unroll="true"/>
        <exception class="org.xml.sax.SAXParseException" name="sax-parsing"/>
        <exception class="org.xml.sax.SAXException" name="sax" unroll="true"/>
        <exception class="org.apache.cocoon.ResourceNotFoundException" name="resourcenotfound"/>
        <exception class="org.apache.cocoon.ProcessingException" name="processing" unroll="true"/>
        <exception class="org.apache.lenya.cms.publishing.ParentNodeNotFoundException" name="parent-node-not-found"/>
        <!--         <exception class="org.apache.lenya.cms.publishing.PublishingException" name="publishing"/> -->
        <!--         <exception class="org.apache.lenya.cms.publication.SiteTreeException" name="sitetree"/> -->
      </map:selector>
    </map:selectors>
    
  </map:components>
  
  <!-- =========================== Views ================================= -->

  <map:views>
    <map:view from-label="aggregation" name="aggregation">
      <map:serialize type="xml"/>
    </map:view>
    <map:view from-label="xsp" name="xsp">
      <map:serialize type="xml"/>
    </map:view>
    <map:view from-label="xopus-pipeline" name="xopus-pipeline">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>
  
  <!-- =========================== Resources ================================ -->
  <map:resources>
    <map:resource name="style-cms-page">
      <map:transform type="i18n">      
        <map:parameter name="locale" value="{request:locale}"/>
      </map:transform>    
      <map:transform src="xslt/util/page2xhtml.xsl">
        <map:parameter name="contextprefix" value="{request:contextPath}"/>
      </map:transform>
      <map:transform src="xslt/util/strip_namespaces.xsl"/>
      <map:serialize type="xhtml"/>
    </map:resource>
        
  </map:resources>
  
  <!-- =========================== Pipelines ================================ -->
  <!-- FIXME: Reorder the pipelines in here neatly. Maybe alphabetically? -->
  <map:pipelines>
  
    
    <!-- =================================================================== -->
    <!-- Notification Pipelines -->
    <!-- =================================================================== -->
    
    <map:pipeline>
      
      <!-- notification/{publication-id}/{usecase}.xml -->
      <map:match pattern="notification/*/*.xml">
        <map:select type="resource-exists">
          <map:when test="pubs/{1}/config/notification/notification.xconf">
            <map:generate src="pubs/{1}/config/notification/notification.xconf"/>
          </map:when>
          <map:otherwise>
            <map:generate src="config/notification/notification.xconf"/>
          </map:otherwise>      
        </map:select>
        <map:transform src="{fallback:xslt/notification/notification2message.xsl}">
          <map:parameter name="usecase" value="{2}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- notification/{publication-id}/{usecase}.xsl -->
      <map:match pattern="notification/*/*.xsl">
        <map:generate src="cocoon:/notification/{1}/{2}.xml"/>
        <map:transform src="{fallback:xslt/notification/message2xslt.xsl}">
          <map:parameter name="usecase" value="{2}"/>
          <map:parameter name="server-uri" value="http://{request:serverName}:{request:serverPort}"/>
          <map:parameter name="contextPath" value="{request:contextPath}"/>
          <map:parameter name="publication-id" value="{page-envelope:publication-id}"/>
          <map:parameter name="area" value="{page-envelope:area}"/>
          <map:parameter name="document-url" value="{page-envelope:document-url}"/>
          <map:parameter name="proxy-url-live" value="{proxy-url:live:{page-envelope:document-id}:{page-envelope:document-language}}"/>
          <map:parameter name="proxy-url-authoring" value="{proxy-url:authoring:{page-envelope:document-id}:{page-envelope:document-language}}"/>              
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      
    </map:pipeline>

    <!-- =================================================================== -->
    <!-- Usecase Pipelines -->
    <!-- =================================================================== -->
    
    <map:pipeline type="noncaching">
      
      <!-- {publication-id}/{area}/{uri}-->
      <map:match pattern="*/*/**">
        
        <!-- mount publication-specific usecase sitemap -->
        <map:match type="usecase" pattern="*">
          <map:act src="pubs/{../1}/usecase-{1}.xmap" type="resource-exists">
            <map:mount check-reload="true" reload-method="synchron" src="pubs/{../../1}/usecase-{../1}.xmap" uri-prefix="{../../1}"/>
          </map:act>
        </map:match>
        
        <!-- Mount separate usecase sitemap if it exists. -->
        <map:match type="usecase" pattern="*">
          <map:act src="usecases/{1}/usecase-{1}.xmap" type="resource-exists">
            <map:mount check-reload="true" reload-method="synchron" src="usecases/{../1}/usecase-{../1}.xmap" uri-prefix=""/>
          </map:act>
        </map:match>
        
        <!-- Scheduler -->
        <!-- Schedule Document: View, Add, Edit, Delete Jobs -->
        <map:match pattern="schedule" type="usecase">
          
          <!-- show scheduler screen -->
          <map:match pattern="showscreen" type="step">
            <map:generate type="serverpages" src="{fallback:content/scheduler/screen.xsp}"/>
            <map:transform src="{fallback:xslt/scheduler/screen.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:transform src="cocoon:/notification/{../../1}/schedule.xsl"/>
            <map:transform src="cocoon://scheduler/{../../1}/{page-envelope:area}/{../../3}.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <!-- other steps: add job (redirect to page) -->
          <map:generate src="cocoon://scheduler/publication/{../1}"/>
          <map:transform src="xslt/util/redirect.xsl">
            <map:parameter name="url" value="{request-param:referer}"/>
          </map:transform>
          <map:serialize/>
          
        </map:match>

        <!-- usecase -->
        <!-- View Logs -->
        <map:match pattern="view-logs" type="usecase">
          
          <map:match pattern="overview" type="step">
            <map:generate src="pubs/{../../1}/logs/tasks" type="directory"/>
            <map:transform src="{fallback:xslt/logs/directory2html.xsl}"/>
            <map:transform src="{fallback:xslt/util/page2xhtml.xsl}">
              <map:parameter name="context-prefix" value="{request:contextPath}"/>
            </map:transform>
            <map:serialize/>
          </map:match>
          
          <!-- step -->
          <map:match pattern="log" type="step">
            <map:act type="request">
              <map:parameter name="parameters" value="true"/>
              <map:generate src="pubs/{../../../1}/logs/tasks/{logfile}"/>
            </map:act>
            <map:transform src="{fallback:xslt/logs/antlog2html.xsl}"/>
            <map:transform src="{fallback:xslt/logs/antlog2page.xsl}"/>
            <map:transform src="{fallback:xslt/util/page2xhtml.xsl}">
              <map:parameter name="context-prefix" value="{request:contextPath}"/>
            </map:transform>
            <map:serialize/>
          </map:match>
          <!-- step -->
          
        </map:match>
        <!-- usecase -->


        <!-- Submit -->
        <map:match pattern="submit" type="usecase">
          <map:match pattern="showscreen" type="step">
            <map:generate type="serverpages" src="{fallback:content/publishing/submit-screen.xsp}"/>
            <map:transform src="{fallback:xslt/publishing/submit-screen.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:transform src="cocoon:/notification/{../../1}/submit.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
        </map:match>
        <!-- / Submit -->
        
        <!-- Reject -->
        <map:match pattern="reject" type="usecase">
          <map:match pattern="showscreen" type="step">
            <map:generate type="serverpages" src="{fallback:content/publishing/reject-screen.xsp}"/>
            <map:transform src="{fallback:xslt/publishing/reject-screen.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:transform src="cocoon:/notification/{../../1}/reject.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
        </map:match>
        <!-- / Reject -->
        
        <!-- Publish -->
        <map:match pattern="publish" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate type="serverpages" src="{fallback:content/publishing/screen.xsp}"/>
            <map:transform src="{fallback:xslt/publishing/publish-screen.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:transform src="cocoon:/notification/{../../1}/publish.xsl"/>
            <!-- This transformer can cause trouble with WebLogic Server on AIX -->
            <map:transform src="cocoon://scheduler/{../../1}/{page-envelope:area}/{../../3}.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="show-referenced-documents" type="step">
            <map:generate src="{fallback:content/publishing/referenced-documents.xsp}" type="serverpages"/>
            <map:transform type="xalan" src="{fallback:xslt/publishing/referenced-documents.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:serialize type="text"/>
          </map:match>
          
          <map:match pattern="publish" type="step">
            <map:act type="task">
              <map:parameter name="publication-id" value="{../../1}"/>
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:parameter name="properties.export.server-port" value="{request:serverPort}"/>
              <map:parameter name="properties.export.context-path" value="{request:contextPath}"/>
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>
        <!-- /Publish -->
        
        <!-- create -->      
        <map:match pattern="create" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate type="serverpages" src="{fallback:content/authoring/create.xsp}"/>
            <map:transform src="{fallback:xslt/authoring/create.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="contextprefix" value="{request:contextPath}"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="create" type="step">
            <!-- Make sure the child-id doesn't exist yet -->
            <map:act type="document-id-exists">
              <map:parameter name="document-id" value="{request-param:properties.create.parent-id}/{request-param:properties.create.child-id}"/>
              <map:redirect-to uri="{request:requestURI}?doctype={request-param:properties.create.doctype}&amp;lenya.usecase=create&amp;lenya.step=showscreen&amp;status=duplicate-id"/>
            </map:act>
            <map:act type="task">
              <map:parameter name="task-id" value="create"/>
              <map:select type="parameter">
                <map:parameter name="parameter-selector-test" value="{request-param:properties.create.parent-id}"/>
                <map:when test="/">
                  <map:redirect-to session="true" uri="{document-url:{page-envelope:area}:{request-param:properties.create.parent-id}{request-param:properties.create.child-id}:{request-param:properties.create.language}}?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
                </map:when>
                <map:otherwise>
                  <map:redirect-to session="true" uri="{document-url:{page-envelope:area}:{request-param:properties.create.parent-id}/{request-param:properties.create.child-id}:{request-param:properties.create.language}}?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
                </map:otherwise>
              </map:select>
            </map:act>
            <map:generate type="serverpages" src="{fallback:content/authoring/create.xsp}"/>
            <map:transform src="{fallback:xslt/authoring/create.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="contextprefix" value="{request:contextPath}"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
        </map:match>

        
        <!-- create-language -->
        <map:match pattern="create-language" type="usecase">

          <map:match pattern="showscreen" type="step">
            <map:generate type="serverpages" src="{fallback:content/authoring/create-language.xsp}"/>
            <map:transform src="{fallback:xslt/authoring/create-language.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="contextprefix" value="{request:contextPath}"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="create" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="create-language"/>
              <map:parameter name="properties.create.doctype" value="{page-envelope:document-type}"/>
              <map:redirect-to uri="{document-url:{page-envelope:area}:{page-envelope:document-id}:{request-param:properties.create.new.language}}?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
            </map:act>
          </map:match>

        </map:match>
        
        <!-- ************************************************************** -->
        <!-- ** Xopus                                                    ** -->
        <!-- **                                                          ** -->
        <!-- ** NOTE: page-envelope:document-path depends on the         ** -->
        <!-- **       publication specific DocumentIdToPathMapper which  ** -->
        <!-- **       is configured within config/publication.xconf      ** -->
        <!-- ************************************************************** -->
        <map:match pattern="xopus" type="usecase">
          <map:match pattern="open" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:act type="resource-exists" src="{xopus:path}/{xopus:context}/xopus/xopus.js"> <!-- Check for Xopus -->
              
                <map:act type="reserved-checkout">
                  <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                    <map:parameter name="user" value="{user}"/>
                    <map:parameter name="filename" value="{filename}"/>
                    <map:parameter name="date" value="{date}"/>
                    <map:parameter name="message" value="{message}"/>
                  </map:generate>
                  <map:transform src="xslt/rc/rco-exception.xsl"/>
                  <map:call resource="style-cms-page"/>
                </map:act>
                
                <map:generate src="content/util/empty.xml"/>
                <map:transform src="xslt/authoring/edit/xopus-xhtml.xsl" label="xopus-pipeline">
                  <map:parameter name="contextPrefix" value="{request:contextPath}"/>
                  <map:parameter name="publicationId" value="{page-envelope:publication-id}"/>
                  <map:parameter name="completeArea" value="authoring"/>
                  <map:parameter name="documentUrl" value="{page-envelope:document-url}"/>
                  <map:parameter name="documentId" value="{page-envelope:document-id}"/>
                  <map:parameter name="documentType" value="{request-param:doctype}"/>
                  <map:parameter name="xopusContext" value="{xopus:context}"/>
                </map:transform>
                <!-- NOTE: IE or Xopus doesn't appreciate the DTD which is being inserted by Cocoon -->
                <map:serialize type="html-no-dtd"/>
              </map:act>
              <!--
              <map:generate type="request">
                <map:parameter name="xopuscontext" value="{xopus:context}"/>
                <map:parameter name="xopuspath" value="{xopus:path}"/>
              </map:generate>
              <map:serialize type="xml"/>
	      -->
              <map:generate src="resources/misc/xopus/download.xhtml"/>
              <map:call resource="style-cms-page"/>
            </map:match>
          </map:match>
          
          
          <map:match pattern="xml" type="step">
            <map:match pattern="*/*/**.html">
              <map:select type="request-method">
                <map:when test="POST"> <!-- Save -->

                  <!-- test if the document is checked out -->
        	        <map:act type="reserved-checkout-test">
            	      <map:generate type="serverpages" src="../../content/rc/{exception}.xsp">
                	    <map:parameter name="user" value="{user}"/>
                    	<map:parameter name="filename" value="{filename}"/>
        	            <map:parameter name="date" value="{date}"/>
                        <map:parameter name="message" value="{message}"/>
            	      </map:generate>
                	  <map:transform src="../../xslt/rc/rco-exception.xsl"/>
        	          <map:call resource="style-cms-page"/>
                	</map:act>
        
                  <map:generate type="stream"/>
                  <map:transform src="xslt/authoring/edit/addSourceTags.xsl">
                    <map:parameter name="source" value="pubs/{1}/content/{2}/{page-envelope:document-path}"/>
<!-- TODO: Get content-dir from config/publication.xconf -->
<!--
                    <map:parameter name="source" value="{content-dir:{1},{2}}/{page-envelope:document-path}"/>
-->
                    <!--<map:parameter name="source" value="pubs/{1}/test-xopus.xml"/>-->
                  </map:transform>
                  <map:transform type="write-source">
                    <map:parameter name="serializer" value="xml"/>
                  </map:transform>
		  <map:act type="workflow">
		    <map:parameter name="area" value="{page-envelope:area}"/>
		    <map:parameter name="document-id" value="{page-envelope:document-id}"/>
		    <map:parameter name="language" value="{page-envelope:document-language}"/>
		    <map:parameter name="event" value="edit"/>
		  </map:act>
                  <map:serialize type="xml"/>
                </map:when>
                <map:otherwise> <!-- GET: Open -->
                  <map:act type="set-header">
                    <!-- prevent caching in the browser -->
                    <map:parameter name="Cache-Control" value="pre-check=0" />
                    <map:parameter name="Expires" value="-1" />
                  </map:act>
                  <map:generate src="pubs/{1}/content/{2}/{page-envelope:document-path}"/>
                  <map:serialize type="xml"/>
                </map:otherwise>
              </map:select>
            </map:match>
          </map:match>
          
          
          <map:match pattern="xsd" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:generate src="pubs/{1}/config/doctypes/schemas/{request-param:doctype}.xsd"/>
              <map:serialize type="xml"/>
            </map:match>
          </map:match>
          <map:match pattern="xslt" type="step">
            <map:match pattern="*/authoring/**.html">
              <map:generate src="pubs/{1}/lenya/xslt/xopus/{request-param:doctype}.xsl"/>
              <map:serialize type="xml"/>
            </map:match>
          </map:match>
        </map:match>
        <!-- ************************************************************** -->
        <!-- ********  /Xopus Editor ************************************** -->
        <!-- ************************************************************** -->
        

        <!-- This is the generic asset upload matcher -->
        <map:match pattern="asset" type="usecase">
          <map:match pattern="showscreen" type="step">
            <map:select type="request-parameter">  
              <map:parameter name="parameter-name" value="insert"/>
              <map:when test="true">
                <map:act type="reserved-checkout">
                  <map:generate type="serverpages" src="content/rc/{exception}.xsp">
                    <map:parameter name="user" value="{user}"/>
                    <map:parameter name="filename" value="{filename}"/>
                    <map:parameter name="date" value="{date}"/>
                    <map:parameter name="message" value="{message}"/>
                  </map:generate>
                  <map:transform src="xslt/rc/rco-exception.xsl"/>
                  <map:call resource="style-cms-page"/>
                </map:act>
              </map:when>
              <map:otherwise>
              </map:otherwise>
            </map:select>
            <map:generate type="serverpages" src="{fallback:content/info/assets.xsp}"/>
            <map:transform src="{fallback:xslt/authoring/asset.xsl}">
	      <map:parameter name="contextprefix" value="{request:contextPath}"/>
              <map:parameter name="use-request-parameters" value="true"/>
              <!--<map:parameter name="error" value="true"/>-->
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>

          <map:match pattern="showdots" type="step">
            <map:generate src="cocoon://{../../1}/lenya-image-upload/{../../2}/{../../3}"/>
            <map:serialize  type="html"/>
          </map:match>

          <map:match pattern="upload" type="step">
            <map:act type="upload">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:redirect-to session="true" uri="{request:requestURI}?lenya.usecase=info-assets&amp;lenya.step=showscreen"/>
            </map:act>
            <map:generate src="{fallback:content/info/assets.xsp}" type="serverpages"/>
            <map:transform src="{fallback:xslt/authoring/asset.xsl}">
	      <map:parameter name="contextprefix" value="{request:contextPath}"/>
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="error" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>

          <map:match pattern="insert" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:redirect-to session="true" uri="{request:requestURI}?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
            </map:act>
          </map:match>

          <map:match pattern="upload-and-insert" type="step">
            <map:act type="upload">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:act type="task">
                <map:parameter name="task-id" value="{request-param:task-id}"/>
                <map:redirect-to session="true" uri="{request:requestURI}?lenya.usecase=checkin&amp;lenya.step=checkin&amp;backup=true"/>
              </map:act>
            </map:act>
            <map:act type="reserved-checkin">
              <map:parameter name="backup" value="false"/>
              <map:generate src="content/rc/{exception}.xsp" type="serverpages">
                <map:parameter name="user" value="{user}"/>
                <map:parameter name="filename" value="{filename}"/>
                <map:parameter name="checkType" value="{checkType}"/>
                <map:parameter name="date" value="{date}"/>
              </map:generate>
              <map:transform src="xslt/rc/rco-exception.xsl"/>
              <map:call resource="style-cms-page"/>
            </map:act>
            <map:generate src="{fallback:content/info/assets.xsp}" type="serverpages"/>
            <map:transform src="{fallback:xslt/authoring/asset.xsl}">
	      <map:parameter name="contextprefix" value="{request:contextPath}"/>
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="error" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>

          <map:match pattern="remove" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:redirect-to session="true" uri="{request:requestURI}?lenya.usecase=info-assets&amp;lenya.step=showscreen&amp;lenya.area={request-param:lenya.area}"/>
            </map:act>
          </map:match>
        </map:match>

        <!--Rollback-->
        <map:match pattern="rollback" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/rc/versions-screen.xsp" type="serverpages"/>
            <map:transform src="xslt/rc/rollback.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="view" type="step">
            <map:redirect-to session="true" uri="{page-envelope:context-prefix}/{../../1}/authoring/{../../3}?lenya.step=view-revision&amp;rollbackTime={request-param:rollbackTime}"/>
          </map:match>
          
          <map:match pattern="rollback" type="step">
            <map:act type="rollback">
              <map:act type="workflow">
                <map:parameter name="area" value="{page-envelope:area}"/>
                <map:parameter name="document-id" value="{page-envelope:document-id}"/>
                <map:parameter name="language" value="{page-envelope:document-language}"/>
                <map:parameter name="event" value="edit"/>
              </map:act>
              <map:redirect-to session="true" uri="{location}"/>
            </map:act>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:match>
          
        </map:match>
        
        
        <!-- CheckOut -->
        <map:match pattern="checkout" type="usecase">
          
          <map:match pattern="checkout" type="step">
            <map:act type="reserved-checkout">
              <map:generate src="content/rc/{exception}.xsp" type="serverpages">
                <map:parameter name="user" value="{user}"/>
                <map:parameter name="filename" value="{filename}"/>
                <map:parameter name="date" value="{date}"/>
              </map:generate>
              <map:transform src="xslt/rc/rco-exception.xsl"/>
              <map:call resource="style-cms-page"/>
            </map:act>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:match>
          
        </map:match>
        
        
        <!-- CheckIn -->
        <map:match pattern="checkin" type="usecase">
          
          <map:match pattern="checkin" type="step">
            <map:act type="reserved-checkin">
              <map:parameter name="backup" value="{request-param:backup}"/>
              <map:generate src="content/rc/{exception}.xsp" type="serverpages">
                <map:parameter name="user" value="{user}"/>
                <map:parameter name="filename" value="{filename}"/>
                <map:parameter name="checkType" value="{checkType}"/>
                <map:parameter name="date" value="{date}"/>
              </map:generate>
              <map:transform src="xslt/rc/rco-exception.xsl"/>
              <map:call resource="style-cms-page"/>
            </map:act>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:match>
          
        </map:match>
        

        <map:match pattern="removelabel" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/authoring/removelabel.xsp" type="serverpages"/>
            <map:transform src="xslt/authoring/removelabel.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>

          <map:match pattern="removelabel" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="{request-param:task-id}"/>
              <map:redirect-to uri="{document-url:{page-envelope:area}:{page-envelope:document-id}:{page-envelope:default-language}}"/>
            </map:act>
          </map:match>

        </map:match>
        
        
        <!-- Info area use cases start here -->
        
        <map:match pattern="archive" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/archive.xsp" type="serverpages"/>
            <map:transform src="xslt/info/archive.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="archive" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request-param:parenturl}"/>
            </map:act>
          </map:match>
          
        </map:match>
        
        
        <map:match pattern="restore" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/restore.xsp" type="serverpages"/>
            <map:transform src="xslt/info/restore.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="restore" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:contextPath}/{../../../1}/{../../../2}/"/>
            </map:act>
          </map:match>
          
        </map:match>
        

        <map:match pattern="copy" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/copy.xsp" type="serverpages"/>
            <map:transform src="xslt/info/copy.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="copy" type="step">
            <map:act type="session-propagator">
              <map:parameter name="org.apache.lenya.cms.info.cutdocumentid" value=""/>
              <map:parameter name="org.apache.lenya.cms.info.firstdocid" value="{request-param:documentid}"/>
              <map:parameter name="org.apache.lenya.cms.info.firstarea" value="{request-param:area}"/>
              <map:parameter name="org.apache.lenya.cms.info.action" value="{request-param:action}"/>
            </map:act>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:match>
          
        </map:match>
        
        
        <map:match pattern="cut" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/cut.xsp" type="serverpages"/>
            <map:transform src="xslt/info/cut.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="cut" type="step">
            <map:act type="session-propagator">
              <map:parameter name="org.apache.lenya.cms.info.firstdocid" value="{request-param:documentid}"/>
              <map:parameter name="org.apache.lenya.cms.info.firstarea" value="{request-param:area}"/>
              <map:parameter name="org.apache.lenya.cms.info.cutdocumentid" value="{request-param:documentid}"/>
              <map:parameter name="org.apache.lenya.cms.info.action" value="{request-param:action}"/>
              <map:redirect-to uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>
        
        
        <map:match pattern="deactivate" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="{fallback:content/info/deactivate.xsp}" type="serverpages"/>
            <map:transform src="{fallback:xslt/info/deactivate.xsl}">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:transform src="cocoon:/notification/{../../1}/deactivate.xsl"/>
            <map:transform src="cocoon://scheduler/{../../1}/{page-envelope:area}/{../../3}.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="deactivate" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>
        
        
        <map:match pattern="delete" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/delete.xsp" type="serverpages"/>
            <map:transform src="xslt/info/delete.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="delete" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request-param:parenturl}"/>
            </map:act>
          </map:match>
          
        </map:match>

        <map:match pattern="move-node" type="usecase">
          <map:match pattern="move-node" type="step">
            <map:act type="task">
              <map:parameter name="task-id" value="movenode"/>
              <map:parameter name="properties.movenode.documentid" value="{page-envelope:document-id}"/>
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
        </map:match>
        
        
        <map:match pattern="paste" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/paste.xsp" type="serverpages"/>
            <map:transform src="xslt/info/paste.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="paste" type="step">
            <map:select type="request-parameter">
              <map:parameter name="parameter-name" value="task-id"/>  
              <map:when test="moveDocument">
                <map:act type="session-propagator">
                  <map:parameter name="org.apache.lenya.cms.info.firstdocid" value=""/>
                  <map:parameter name="org.apache.lenya.cms.info.cutdocumentid" value=""/>
                </map:act>
              </map:when>
              <map:otherwise>
                <map:act type="session-propagator">
                  <map:parameter name="org.apache.lenya.cms.info.cutdocumentid" value=""/>
                </map:act>
              </map:otherwise>
            </map:select>
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>

          </map:match>
          
        </map:match>
        
        
        <map:match pattern="rename" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/info/rename.xsp" type="serverpages"/>
			<map:transform src="xslt/info/rename.xsl">
			 <map:parameter name="contextprefix" value="{request:contextPath}"/>
			</map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="rename" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request-param:parenturl}"/>
            </map:act>
          </map:match>
          
        </map:match>

        <!-- Rename a Label -->
        <map:match pattern="rename-label" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/util/empty.xml"/>
            <map:transform src="xslt/info/rename-label.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="requesturi" value="{request:requestURI}"/>
              <map:parameter name="area" value="{page-envelope:area}"/>
              <map:parameter name="language" value="{page-envelope:document-language}"/>
              <map:parameter name="label" value="{page-envelope:document-label}"/>
              <map:parameter name="documentid" value="{page-envelope:document-id}"/>
              <map:parameter name="taskid" value="rename-label"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="rename-label" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>

        <!-- Change visibility of a node in navigation -->
         <map:match pattern="change-visibility" type="usecase">
          
          <map:match pattern="showscreen" type="step">
            <map:generate src="content/util/empty.xml"/>
            <map:transform src="xslt/info/change-visibility.xsl">
              <map:parameter name="use-request-parameters" value="true"/>
              <map:parameter name="requesturi" value="{request:requestURI}"/>
              <map:parameter name="area" value="{page-envelope:area}"/>
              <map:parameter name="documentid" value="{page-envelope:document-id}"/>
              <map:parameter name="taskid" value="change-visibility"/>
            </map:transform>
            <map:call resource="style-cms-page"/>
          </map:match>
          
          <map:match pattern="change-visibility" type="step">
            <map:act type="task">
              <map:redirect-to session="true" uri="{request:requestURI}"/>
            </map:act>
          </map:match>
          
        </map:match>
               
        <!-- initialize the workflow -->
        <map:match type="usecase" pattern="initworkflow">
          <map:act type="task">
            <map:parameter name="task-id" value="ant"/>
            <map:parameter name="target" value="initworkflow"/>
            <map:parameter name="properties.initworkflow.document-id" value="{page-envelope:document-id}"/>
            <map:parameter name="properties.initworkflow.document-type" value="{page-envelope:document-type}"/>
            <map:parameter name="properties.initworkflow.language" value="{page-envelope:document-language}"/>
            <map:parameter name="properties.initworkflow.user-id" value="{access-control:user-id}"/>
            <map:parameter name="properties.initworkflow.machine-ip" value="{access-control:ip-address}"/>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:act>
        </map:match>

        <map:match pattern="transition" type="usecase">
          <map:act type="task">
            <map:parameter name="publication-id" value="{../1}"/>
            <map:parameter name="task-id" value="empty"/>
            <map:redirect-to session="true" uri="{request:requestURI}"/>
          </map:act>
        </map:match>
        
      </map:match>
      
      <map:handle-errors>
        <map:select type="exception">
          <map:when test="parent-node-not-found">
            <map:generate src="content/util/empty.xml"/>
            <map:transform src="xslt/exception/parent-node-not-found.xsl"/>
            <map:call resource="style-cms-page"/>
          </map:when>
          <map:otherwise>
            <map:generate type="notifying"/>
            <map:transform src="../stylesheets/system/error2html.xslt">
              <map:parameter name="contextPath" value="{request:contextPath}"/>
            </map:transform>
          </map:otherwise>
        </map:select>
        <map:serialize type="html"/>
      </map:handle-errors>
      
    </map:pipeline>
    
  </map:pipelines>
  
</map:sitemap>
