<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- $Id$ -->

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <!-- =========================== Components ================================ -->
  
  <map:components/>
  
  <!-- =========================== Views ================================= -->
  
  <map:views>
    <map:view from-label="aggregation" name="aggregation">
      <map:serialize type="xml"/>
    </map:view>
    <map:view from-label="xsp" name="xsp">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>
  
  <!-- =========================== Resources ================================ -->
  
  <map:resources/>
  
  <!-- =========================== Pipelines ================================ -->
  
  <map:pipelines>
    <map:pipeline>
      
      <!-- load task list -->
      <map:match pattern="tasks/*">
        <map:generate src="pubs/{1}/config/tasks/tasks.xconf"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- create the current job snapshot -->
      <map:match pattern="servlet">
        <!-- TODO: This can lead to problems if the request does not come through the "HTTP port" but for instance through the mod_jk port 8009 -->
        <map:generate src="{request:contextPath}/servlet/QuartzSchedulerServlet" type="servletproxy"/>
        <map:transform src="xslt/scheduler/sort.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- publication/{publication-id} -->
      <map:match pattern="publication/*">
        <map:aggregate element="scheduler" label="aggregation"
          ns="http://apache.org/cocoon/lenya/scheduler/1.0" prefix="sch">
          <map:part src="cocoon:/tasks/{1}"/>
          <map:part src="cocoon:/servlet" strip-root="true"/>
          <map:part src="cocoon:/xsp" strip-root="true"/>
        </map:aggregate>
        <map:transform src="xslt/scheduler/filter-publication.xsl">
          <map:parameter name="publication-id" value="{1}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- document/{publication-id}/{area-document-url} -->
      <map:match pattern="document/*/**">
        <map:generate src="cocoon:/publication/{1}"/>
        <map:transform src="xslt/scheduler/filter-document.xsl">
          <map:parameter name="documenturl" value="/{1}/{2}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      
      <!--
        About the initialreferer parameter:
        When the page is called the for first time, the initialreferer
        parameter value is used. For subsequent requests, the value
        of the request parameter "referer" is used. This way, it is
        avoided that all query strings are appended.
      -->
      
      <!-- {publication-id}/{area-document-url}.xsl -->
      <map:match pattern="*/**.xsl">
        <map:generate src="cocoon:/document/{1}/{2}"/>
        <map:transform src="xslt/scheduler/jobs2xslt.xsl">
          <map:parameter name="use-request-parameters" value="true"/>
          <map:parameter name="contextpath" value="{request:contextPath}"/>
          <map:parameter name="documenturl" value="{page-envelope:document-url}"/>
          <map:parameter name="publicationid" value="{page-envelope:publication-id}"/>
          <map:parameter name="initialreferer" value="{request:requestURI}?{request:queryString}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
      
      <!-- xsp -->
      <map:match pattern="xsp">
        <map:generate src="content/scheduler/scheduler.xsp" type="serverpages"/>
        <map:serialize type="xml"/>
      </map:match>
      
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
