<?xml version="1.0"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

<!-- =========================== Components ================================ -->

  <map:components>
    <map:matchers default="wildcard">
      <map:matcher    name="destination" src="org.apache.cocoon.matching.WildcardHeaderMatcher">
        <header-name>Destination</header-name>
      </map:matcher>
    </map:matchers>
  
<map:serializers default="xhtml"> 
  <map:serializer name="xml-get" src="org.apache.cocoon.serialization.XMLSerializer" mime-type="text/xml">
    <encoding>utf-8</encoding>
    <omit-xml-declaration>yes</omit-xml-declaration>
  </map:serializer>
</map:serializers>
 
  </map:components>

<!-- ========================== Flowscript ================================= -->

  <map:flow language="javascript">
    <map:script src="webdav.js"/>
  </map:flow>

<!-- =========================== Views ===================================== -->

  <map:views>    
    <map:view name="content" from-label="content">
      <map:serialize type="xml" />
    </map:view>
  </map:views>

  <map:pipelines>
    
    <map:pipeline type="noncaching">
      
      <!-- 
        This internal sitemap fragment renders the usecase, once the
        executeUsecase() flowscript has completed and issued a redirect,
        which is matched here.
        -->
      <map:match pattern="view/*/**" internal-only="true">
        
        <map:generate type="jx" src="fallback://lenya/usecases/{2}.jx"/>
        <!--<map:transform type="cinclude"/>-->
        <map:transform type="i18n">
          <map:parameter name="locale" value="{request:locale}"/>
        </map:transform>
        <map:transform type="xslt" src="NSclean.xsl"/>
        <map:select type="request-method">
          <map:when test="PROPFIND">
            <map:serialize type="xml" status-code="207"/>
          </map:when>
          <map:otherwise>
            <map:serialize type="xml" status-code="200"/>
          </map:otherwise>
        </map:select>
      </map:match>
      
    </map:pipeline>
    
<!-- ========================= Private Resources =========================== -->

    <map:pipeline type="noncaching" internal-only="true">
      
      <!-- Read the request for binaries PUT -->
      <!--
      <map:match pattern="request/read">
        <map:read type="request" />
      </map:match>
      -->
      
      <map:match pattern="request/generate">
        <map:generate type="stream" />
        <map:serialize type="xml" />
      </map:match>
      
      <!--+ 
          | If you need to check or change the XML that is being PUT
          | you can do that here. This is the pipeline that will
          | generate the input for the PUT method.
          + -->
      <map:match pattern="request/PUT">
        <map:generate type="stream">
          <map:parameter name="defaultContentType" value="text/xml" />
        </map:generate>
        <map:serialize type="xml" />
      </map:match>
      
    </map:pipeline>
    
<!-- ========================= Public Resources =========================== -->
    
    <map:pipeline type="caching">
 
      <map:match pattern="authoring">
        <map:call function="selectMethod">
          <map:parameter name="page" value=""/>
          <map:parameter name="requestURI" value="{request:requestURI}" />
        </map:call>
      </map:match>
      <map:match pattern="authoring/**">
        <map:call function="selectMethod">
          <map:parameter name="page" value="{1}"/>
          <map:parameter name="requestURI" value="{request:requestURI}" />
        </map:call>
      </map:match>

      <map:match pattern="{page-envelope:publication-id}">
        <map:call function="selectMethod">
          <map:parameter name="page" value=""/>
          <map:parameter name="requestURI" value="{request:requestURI}" />
        </map:call>
      </map:match> 
      <map:match pattern="{page-envelope:publication-id}/">
        <map:call function="selectMethod">
          <map:parameter name="page" value=""/>
          <map:parameter name="requestURI" value="{request:requestURI}" />
        </map:call>
      </map:match>        
      
      <map:match pattern="GET/**">
        <map:act type="set-header">
          <map:parameter name="Last-Modified" value="{page-envelope:document-lastmodified}" />
          <map:match pattern="GET/*_*.html">
            <map:generate src="fallback://content/authoring/{1}/index_{2}.xml"/>
            <map:serialize type="xml-get"/>
          </map:match>
          <map:match pattern="GET/**/*_*.html">
            <map:generate src="fallback://content/authoring/{1}/{2}/index_{3}.xml"/>
            <map:serialize type="xml-get"/>
          </map:match>
        </map:act>
      </map:match>

      <map:match pattern="PROPFIND/**_*.html">
        <map:call function="filePropfind" >
          <map:parameter name="last-modified" value="{page-envelope:document-lastmodified}"/>
        </map:call>
      </map:match>
 
      <map:match pattern="PROPFIND/**">        
        <map:call function="propfind" /> 
      </map:match>
      
      <map:match pattern="OPTIONS/**">
        <map:call function="options">
          <map:parameter name="uri" value="{request:requestURI}" />
        </map:call>
      </map:match>

      <map:match pattern="HEAD/**_*.html">
        <map:call function="filePropfind" />
      </map:match>
      
      <map:match pattern="HEAD/**">
        <map:call function="propfind" />
      </map:match>
      
    </map:pipeline>
    
    <map:pipeline type="noncaching">

      <map:match pattern="checkin">
        <map:act type="reserved-checkin">
          <map:generate src="dummy.xml"/>
          <map:serialize type="xml"/>
        </map:act>
        <map:generate src="dummy.xml"/>
        <map:serialize type="xml" status-code="201" />
      </map:match>

      <map:match pattern="PUT/**_*.html">
          <map:call function="put" />
      </map:match>
            
      <map:match pattern="DELETE/**">
        <map:call function="remove" />
      </map:match> 
                        
      <map:match pattern="LOCK/**">
        <map:act type="reserved-checkout">
          <map:generate src="dummy.xml"/>
          <map:serialize type="xml"  status-code="423"/>
        </map:act>
        <map:generate src="lock.xml"/>
        <map:serialize type="xml"/>
      </map:match>
      
    </map:pipeline>

  </map:pipelines>

</map:sitemap>
