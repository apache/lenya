<?xml version="1.0" encoding="UTF-8"?>
<!-- CVS: $Id: publication-sitemap.xmap,v 1.54 2003/10/06 10:24:23 michi Exp $ -->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <map:components>
    <map:generators default="file"/>
    <map:matchers default="wildcard"/>
    <map:actions/>
    <map:selectors>
     <map:selector name="request-method" logger="sitemap.selector.request-method" src="org.apache.cocoon.selection.RequestMethodSelector"/>
    </map:selectors>
  </map:components>
  
  <map:views>
    <map:view from-label="aggregation" name="aggregation">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>
  
  <map:resources/>
  
  <map:pipelines>
    <map:pipeline>
      <map:match pattern="**/">
        <map:redirect-to uri="index.html"/>
      </map:match>
    </map:pipeline>
    
    <map:pipeline>
      <!-- pattern="{area}/simple/{document-path}" -->
      <map:match pattern="lenya-document/*/*/**.xml">
        <map:mount check-reload="true" reload-method="synchron" src="doctypes.xmap" uri-prefix="lenya-document/"/>
      </map:match>
    </map:pipeline>







    <!-- BX Editor: Entries -->
    <map:pipeline>
      <map:match pattern="**/*-bxeng.html">
        <map:aggregate element="bxeng">
          <map:part src="../../resources/misc/bxeng/index.xhtml"/>
          <map:part src="resources/misc/bxeng/simple-namespaces.xml"/>
        </map:aggregate>
        <map:transform src="../../xslt/bxeng/aggregate.xsl"/>
        <map:transform src="../../xslt/bxeng/index-xhtml.xsl">
          <map:parameter name="configfile" value="./{2}-config-bxeng.xml"/>
        </map:transform>
        <map:serialize type="xhtml-iso-8859-1"/>
      </map:match>
    </map:pipeline>
    <map:pipeline>
      <map:match pattern="**/*-config-bxeng.xml">
        <map:generate src="../../resources/misc/bxeng/inc/config.xml"/>
        <map:transform src="../../xslt/bxeng/config-xml.xsl">
          <map:parameter name="BX_xmlfile" value="{2}-bxeng.xml"/>
          <map:parameter name="BX_xslfile" value="simple-bxeng.xsl"/>
<!--
          <map:parameter name="BX_xhtmlfile" value="{2}.xhtml"/>
-->
<!--
          <map:parameter name="BX_validationfile" value="xhtml.rng"/>
-->
          <map:parameter name="css" value="simple-bxeng.css"/>
          <map:parameter name="BX_exitdestination" value="{2}.html"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
    <!-- GET and PUT -->
    <map:pipeline type="noncaching">
      <map:match pattern="**/*_*-bxeng.xml">
        <map:select type="request-method">
          <map:when test="PUT">
            <map:generate type="stream"/>
            <map:transform src="../../xslt/authoring/edit/addSourceTags.xsl">
              <map:parameter name="source" value="content/{1}/{2}/index_{3}.xml"/>
            </map:transform>
            <map:transform type="write-source"/>
            <map:serialize type="xml" status-code="204"/>
          </map:when>
          <map:otherwise> <!-- GET -->
            <map:generate src="content/{1}/{2}/{2}_{3}.xml"/>
            <map:serialize type="xml"/>
          </map:otherwise>
        </map:select>
      </map:match>
      <map:handle-errors type="500"/>
    </map:pipeline>
    <!-- /GET and PUT -->
    <map:pipeline>
      <map:match pattern="**/simple-bxeng.xsl">
        <map:generate src="xslt/simple-bxeng.xsl"/>
        <map:serialize type="xml"/>
      </map:match>
      <map:match pattern="**/simple-bxeng.css">
        <map:read src="resources/misc/bxeng/simple-bxeng.css" mime-type="text/css"/>
      </map:match>
      <map:handle-errors type="500"/>
    </map:pipeline>
    <!-- /BX Editor: Entries -->






    
    <!-- Edit Article with Xopus2 -->
    <map:pipeline>
      
      <map:match pattern="authoring/xopus2/**.xml">
        
        <map:act type="reserved-checkout">
          <map:generate src="../../content/rc/{exception}.xsp" type="serverpages">
            <map:parameter name="user" value="{user}"/>
            <map:parameter name="filename" value="{filename}"/>
            <map:parameter name="date" value="{date}"/>
          </map:generate>
          <map:transform src="../../xslt/rc/rco-exception.xsl"/>
          <map:serialize type="html"/>
        </map:act>
        
        <map:act src="authoring/{1}.xml" type="uriparametrizer">
          <map:parameter name="doctype" value="cocoon://uri-parameter/{page-envelope:publication-id}/doctype"/>
          <map:aggregate element="lenya" label="aggregation">
            <map:part src="cocoon:/lenyamenubar/authoring/article.xml"/>
            <map:part element="cmsbody" src="content/authoring/{../1}.xml"/>
          </map:aggregate>
          <map:transform src="xslt/authoring/xopus2-{doctype}.xsl">
            <map:parameter name="articleid" value="{../1}"/>
          </map:transform>
          <map:serialize type="html"/>
        </map:act>
        
      </map:match>
      
    </map:pipeline>
    
    <!-- This is the pipeline that builds the page. It aggregates all
    the navigational elements (breadcrumb, tabs, menu) with the actual
    content of the document. -->
    <map:pipeline>
      <!-- /lenyabody/{publication-id}/{area}/{doctype}/{url} -->
      <map:match pattern="lenyabody/*/*/*/**">
        <map:aggregate element="cmsbody">
          <map:part src="cocoon://navigation/{1}/{2}/breadcrumb/{4}.xml"/>
          <map:part src="cocoon://navigation/{1}/{2}/tabs/{4}.xml"/>
          <map:part src="cocoon://navigation/{1}/{2}/menu/{4}.xml"/>
          <map:part src="cocoon:/lenya-document/{2}/{3}/{page-envelope:document-path}"/>
        </map:aggregate>
        <map:transform src="xslt/page2xhtml.xsl">
          <map:parameter name="root" value="{page-envelope:context-prefix}/{1}/{2}"/>
          <map:parameter name="url" value="{4}"/>
        </map:transform>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
    
    <!-- This is the main entry point into the publication. This
    pipeline uses the uriparametrizer to determine the doctype of this
    request. It then aggregates the lenya menu (for the given area) and
    the lenya body, the actual document. -->
    <map:pipeline>
      <map:match pattern="**.html">
        <map:generate src="cocoon:/lenyabody/{page-envelope:publication-id}/{page-envelope:area}/{page-envelope:document-type}{page-envelope:document-url}"/>
        <map:transform src="cocoon://lenya-page/{page-envelope:publication-id}/{1}.xml"/>
        <map:serialize type="html"/>
      </map:match>
      
      <map:handle-errors type="500">
        <!-- FIXME: other exceptions are also caught here! -->
        <map:transform src="../../xslt/exception/not-published-yet.xsl"/>
        <map:serialize type="html"/>
      </map:handle-errors>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
