<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- $Id$ -->

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  
  <map:components/>
  
  <map:views>
    <map:view from-label="aggregation" name="aggregation">
      <map:serialize type="xml"/>
    </map:view>
  </map:views>
  
  <map:resources>
    <map:resource name="style-cms-page">
      <map:transform type="i18n">      
        <map:parameter name="locale" value="{request:locale}"/>
      </map:transform>    
      <map:transform src="../../xslt/util/page2xhtml.xsl">
        <map:parameter name="contextprefix" value="{request:contextPath}"/>
      </map:transform>
      <map:transform src="../../xslt/util/strip_namespaces.xsl"/>
      <map:select type="parameter">
        <map:parameter name="statusCode" value="{statusCode}"/>
        <map:when test="">
          <map:serialize/>
        </map:when>
        <map:otherwise>
          <map:serialize status-code="{statusCode}"/>
        </map:otherwise>
      </map:select>
    </map:resource>
  </map:resources>

  <map:pipelines>
    <map:pipeline>
      <map:match pattern="**/">
        <map:redirect-to uri="index.html"/>
      </map:match>
    </map:pipeline>
    
    <map:pipeline>
      <!-- pattern="{rendertype}/{area}/{doctype}/{document-path}" -->
      <!-- NOTE: rendertype seems to be 'edit' or 'view' -->
      <map:match pattern="lenya-document-*/*/*/**.xml">
        <map:mount check-reload="true" reload-method="synchron" src="doctypes.xmap" uri-prefix="lenya-document-"/>
      </map:match>
    </map:pipeline>



    <!-- BX Editor: RNG Schema, CSS -->
    <map:pipeline type="noncaching">
      
      <map:match pattern="*/**.rng">
        <map:generate src="config/doctypes/schemas/{2}.rng"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <map:match pattern="**/*-bxeng.css">
        <map:read mime-type="text/css" src="resources/misc/bxeng/{2}-bxeng.css"/>
      </map:match>
      
      <map:handle-errors>
        <map:select type="exception">
           <map:when test="resourcenotfound">
             <map:generate src="../../content/util/empty.xml" />
            <map:transform src="../../xslt/exception/document-does-not-exist.xsl">
              <map:parameter name="documentid" value="{page-envelope:document-id}"/>
              <map:parameter name="documenturl" value="{page-envelope:document-url}"/>
            </map:transform>
            <map:call resource="style-cms-page">
              <map:parameter name="statusCode" value="404"/>
            </map:call>
          </map:when>
      <map:otherwise>
        <map:generate type="notifying"/>
        <map:transform src="../../../stylesheets/system/error2html.xslt">
          <map:parameter name="contextPath" value="{request:contextPath}"/>
        </map:transform>
      </map:otherwise>
        </map:select>
        <map:serialize type="html"/>
      </map:handle-errors>    
      </map:pipeline>
    <!-- /BX Editor: RNG Schema -->

    
    <!-- This is the pipeline that builds the page. It aggregates all
    the navigational elements (breadcrumb, tabs, menu) with the actual
    content of the document. -->
    <map:pipeline>
      <!-- /lenyabody-{rendertype}/{publication-id}/{area}/{doctype}/{url} -->
      <map:match pattern="lenyabody-*/*/*/*/**">
        <map:aggregate element="cmsbody">
          <map:part src="cocoon://navigation/{2}/{3}/breadcrumb/{5}.xml"/>
          <map:part src="cocoon://navigation/{2}/{3}/tabs/{5}.xml"/>
          <map:part src="cocoon://navigation/{2}/{3}/menu/{5}.xml"/>
          <map:part src="cocoon://navigation/{2}/{3}/search/{5}.xml"/>
          <map:part src="cocoon:/lenya-document-{1}/{3}/{4}/{page-envelope:document-path}"/>
        </map:aggregate>
        <map:transform src="xslt/page2xhtml-{4}.xsl">
          <map:parameter name="root" value="{page-envelope:context-prefix}/{2}/{3}"/>
          <map:parameter name="url" value="{5}"/>
          <map:parameter name="document-id" value="{page-envelope:document-id}"/>
          <map:parameter name="document-type" value="{page-envelope:document-type}"/>
        </map:transform>
        <map:select type="parameter">
          <map:parameter name="parameter-selector-test" value="{1}"/>
          <map:when test="view">
	      <map:transform type="link-rewrite"/>
          </map:when>
        </map:select>
        <map:serialize type="xml"/>
      </map:match>
    </map:pipeline>
    
    <!-- This is the main entry point into the publication. This
    pipeline uses the uriparametrizer to determine the doctype of this
    request. It then aggregates the lenya menu (for the given area) and
    the lenya body, the actual document. -->
    <map:pipeline>
      <map:match pattern="**.bxe.html">
        <map:generate src="cocoon:/lenyabody-edit/{page-envelope:publication-id}/{page-envelope:area}/{page-envelope:document-type}{page-envelope:document-url}"/>
        <map:serialize type="xml"/>
      </map:match>
      
      <map:match pattern="**.html">
        <map:act type="language-exists">
          <map:generate src="cocoon:/lenyabody-view/{page-envelope:publication-id}/{page-envelope:area}/{page-envelope:document-type}{page-envelope:document-url}"/>
          <map:match pattern="authoring/**.html">
            <map:transform src="cocoon://lenya-page/{page-envelope:publication-id}/{../../1}.xml?doctype={page-envelope:document-type}"/>
          </map:match>
          <map:transform src="../../xslt/util/strip_namespaces.xsl"/>
          <map:serialize type="html"/>
        </map:act>

        <!-- There is no version of the requested document-id for the
             requested language. -->
        <map:generate type="serverpages" src="../../content/exception/missing-language.xsp"/>
        <map:transform src="../../xslt/exception/missing-language.xsl"/>
        <map:call resource="style-cms-page"/>

      </map:match>
      
      <map:handle-errors>
        <map:select type="exception">
          <map:when test="document-does-not-exist">
            <map:generate src="../../content/util/empty.xml"/>
            <map:transform src="../../xslt/exception/document-does-not-exist.xsl">
              <map:parameter name="documentid" value="{page-envelope:document-id}"/>
              <map:parameter name="documenturl" value="{page-envelope:document-url}"/>
            </map:transform>
            <map:call resource="style-cms-page">
              <map:parameter name="statusCode" value="404"/>
            </map:call>
          </map:when>
           <map:when test="resourcenotfound">
             <map:generate src="../../content/util/empty.xml" />
            <map:transform src="../../xslt/exception/document-does-not-exist.xsl">
              <map:parameter name="documentid" value="{page-envelope:document-id}"/>
              <map:parameter name="documenturl" value="{page-envelope:document-url}"/>
            </map:transform>
            <map:call resource="style-cms-page">
              <map:parameter name="statusCode" value="404"/>
            </map:call>
          </map:when>
      <map:otherwise>
        <map:generate type="notifying"/>
        <map:transform src="../../../stylesheets/system/error2html.xslt">
          <map:parameter name="contextPath" value="{request:contextPath}"/>
        </map:transform>
      </map:otherwise>
        </map:select>
        <map:serialize type="html"/>
      </map:handle-errors>
      
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
