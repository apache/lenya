<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN" "document-v11.dtd">

<document>
  <header>
    <title>Asset Management</title>
    <version/>
    <type/>
    <authors>
      <person name="Christian Egli" email="egli@apache.org"/>
      <person name="Gregor J. Rothfuss" email="gregor@apache.org"/>
    </authors>
  </header>

  <body>
    
    <section>
      <title>Introduction</title>
      <p>Asset management is the process by which assets, such as pdf
      files or images are uploaded to the server and inserted into a
      document.</p>

      <p>Assets can be either inserted directly into a document or can
      be uploaded for later insertion. Direct insertion happens when
      editing the document, upload and removal can be done in the
      asset tab in the site area.</p>
    </section>


    <section>
      <title>Asset upload</title> 

      <p>The upload of assets is done quite simply with a multipart
      request. The Upload screen is generated by an xsp
      (<code>asset.xsp</code>) which handles asset upload, image
      upload, asset insertion and image insertion. This screen then
      generates the multipart request which is eventually handled by
      the <code>AssetUploadAction</code>. This action stores the asset
      in the resources directory and generates a meta file with the
      dublin core meta data that was passed in as request parameter or
      with data that was extracted from the request (mime type,
      size). Where the asset is stored is determined by the
      <code>ResourcesManager</code>.</p>

    </section>

    <section>
      <title>Asset insertion (via "enable asset upload" screen)</title> 

      <p>Once the asset is uploaded, a reference to it has to be
      inserted in the original document. Images and "plain" assets are
      handled slighly different but the basic mechanism is the
      same.</p>

      <p>The insertion is done via an ant task
      (<code>insert-asset</code>). This task generates a temporary
      XSLT stylesheet using <code>generate-insertAsset-xsl.xsl</code>
      as a meta stylesheet and an XML template which defines the XML
      snippet that will be inserted in the refering document. The path
      to the XML template is passed as a parameter to the ant
      task. Usually these templates are located in
      <code>config/asset</code>. The generated temporary stylesheet is
      then applied to the document where the reference to the asset is
      to be inserted. It will insert the appropriate XML snippet.</p>
    </section>

    <section>
      <title>Asset insertion (via Bitflux editor)</title> 

      <p>Images and assets can also be inserted from within the Bitflux editor.</p>

      <p>The insertion is done via a XSLT stylesheet 
      (<code>image.xsl</code> or <code>asset.xsl</code> in <code>xslt/bxeng</code>). 
      These stylesheets create a popup window that let the user select an asset or image
      and insert it into the currently opened document via javascript.</p>
      </section>

    <section>
      <title>Asset removal</title>

      <p>Assets can be removed in the asset tab in the site area. This
      removes the asset from the resources directory. It does not
      however remove any references to it.</p>

      <p>Removal is done with an ant task (<code>remove-asset</code>)
      which simply deletes the asset from the resources directory.</p>
    </section>

    <section>
      <title>Involved classes, XSPs and XSLTs</title>

      <p>The following classes, XSPs and XSLTs are involved in the
      asset upload:</p>
      <dl>
	<dt>src/webapp/lenya/content/authoring/asset.xsp, src/webapp/lenya/xslt/authoring/asset.xsl</dt>
	<dd>Take care of displaying the proper asset upload
	screen. There are different screens for image and asset upload
	and for upload with or without subsequent insertion.</dd> 
	<dt>org.apache.lenya.cms.cocoon.acting.UploadAction</dt>
	<dd>Handles the upload request, stores the asset in
	<code>resources/authoring/$document-id/$resource-name</code>,
	and creates a file containing the dublin core meta data for
	the asset.</dd>
	<dt>$publication-id/config/assets/*</dt>
	<dd>Define the XML snippets that is to be inserted in lieu of a
	refernce to an asset.</dd>
	<dt>src/webapp/lenya/xslt/util/generate-insertAsset-xsl.xsl</dt>
	<dd>The meta stylesheet which generates the XSLT the will
	insert the proper XML snippet to link to the asset in the
	refering document.</dd>
	<dt>$publication-id/config/tasks/targets.xml</dt>
	<dd>Defines the <code>insert-asset</code> target which handles
	asset insertion. Also defines the <code>remove-asset</code>
	target.</dd> 
	<dt>org.apache.lenya.cms.publication.ResourcesManager</dt>
	<dd>Manages resources and hides away some of the iplementaion
	details where resources and their meta data is stored.</dd>
      </dl>
    </section>
  </body>
</document>
