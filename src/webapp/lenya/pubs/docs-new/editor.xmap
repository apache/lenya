<?xml version="1.0"?>

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
  <map:components>
    <map:generators default="file">
      <map:generator label="content,data" logger="sitemap.generator.textparser" name="textparser" src="org.apache.cocoon.generation.TextParserGenerator"/>
      <map:generator label="content,data" name="stream" src="org.apache.cocoon.generation.StreamGenerator"/>
      <map:generator label="data" logger="sitemap.generator.extractor" name="extractor" src="org.apache.cocoon.generation.FragmentExtractorGenerator"/>
      <map:generator label="content,data" name="html" src="org.apache.cocoon.generation.HTMLGenerator"/>
      <map:generator label="content,data" logger="sitemap.generator.directory" name="directory" pool-grow="2" pool-max="16" pool-min="2" src="org.apache.cocoon.generation.DirectoryGenerator"/>
      <map:generator label="data" logger="sitemap.generator.request" name="request" pool-grow="2" pool-max="16" pool-min="2" src="org.apache.cocoon.generation.RequestGenerator"/>
      <map:generator label="content,data" logger="sitemap.generator.serverpages" name="serverpages" pool-grow="2" pool-max="32" pool-min="4" src="org.apache.cocoon.generation.ServerPagesGenerator"/>
      <map:generator label="data" logger="sitemap.generator.xpathdirectory" name="xpathdirectory" pool-grow="2" pool-max="32" src="org.apache.cocoon.generation.XPathDirectoryGenerator"/>    
    </map:generators>
    <map:serializers default="html">
 
      <map:serializer logger="sitemap.serializer.inks" name="links" src="org.apache.cocoon.serialization.LinkSerializer"/>
      <map:serializer logger="sitemap.serializer.xml" mime-type="text/xml" name="xml" src="org.apache.cocoon.serialization.XMLSerializer"/>
      <map:serializer logger="sitemap.serializer.text" mime-type="text/text" name="text" src="org.apache.cocoon.serialization.TextSerializer"/>
   
    </map:serializers>
    <map:transformers default="xslt">

      <map:transformer logger="sitemap.transformer.xinclude" name="xinclude" pool-grow="2" pool-max="16" pool-min="2" src="org.apache.cocoon.transformation.XIncludeTransformer"/>
      <map:transformer logger="sitemap.transformer.cinclude" name="cinclude" pool-grow="2" pool-max="16" pool-min="2" src="org.apache.cocoon.transformation.CIncludeTransformer"/>
      <map:transformer logger="sitemap.transformer.extractor" name="extractor" src="org.apache.cocoon.transformation.FragmentExtractorTransformer"/>
      <map:transformer logger="sitemap.transformer.filter" name="filter" src="org.apache.cocoon.transformation.FilterTransformer"/>

      <map:transformer logger="sitemap.transformer.encodeURL" name="encodeURL" src="org.apache.cocoon.transformation.EncodeURLTransformer"/>
      <map:transformer logger="sitemap.transformer.write-source" name="write-source" src="org.apache.cocoon.transformation.SourceWritingTransformer"/>
      <map:transformer logger="sitemap.transformer.textparser" name="textparser" src="org.apache.cocoon.transformation.TextFragmentParserTransformer"/>
    
    </map:transformers>

    <map:readers default="resource"/>
    <map:matchers default="wildcard"/>
    <map:selectors default="browser"/>
    
  </map:components>

  <map:views>
    <map:view name="content" from-label="content">
      <map:serialize type="xml"/>
    </map:view> 
    <map:view name="agg" from-label="agg">
      <map:serialize type="xml"/>
    </map:view> 
    <map:view name="source" from-label="source">
      <map:serialize type="xml"/>
    </map:view> 
  </map:views>

  <map:pipelines>
  
   <map:pipeline internal-only="true">

   <!-- IMPORTANT! This pipeline sould be cachable -->
   <map:match pattern="*.grm">
    <map:generate type="textparser" src="chaperon/{1}.rgrm">
     <map:parameter name="grammar" value="chaperon/grammars/rgrm.grm"/>
    </map:generate>

    <map:transform src="chaperon/stylesheets/rgrm2grm.xsl"/>
    <map:serialize type="xml"/>
   </map:match>
  </map:pipeline>


  <map:pipeline internal-only="false"><!-- true -->
    <!-- 

    Generation pipelines to collect and format the appropriate content based on the requested behaviour and sub-editor

    -->

    <!-- 
    Directory Listing

    Uses the XPathDirectoryGenerator to extract the 'title' of each document
    This one removes any filename from the path, (which is a PIA to do in XSL!)
    Enforces using 'docs' folder of the main project as the root. 
    -->
    <map:match pattern="dir/**">
      <map:generate type="xpathdirectory" src="content/xdocs/{1}/#/document/header/title"/>           
      <map:transform src="editor/stylesheets/dir2skin.xsl"/>
      <map:transform src="editor/stylesheets/skin.xsl"/>
      <map:serialize type="html"/>              
    </map:match>

    <!-- 
    New

    Start a new document from a template
    -->
    <map:match pattern="new(*)/**">
      <map:generate src="editor/docs/template.xml"/>  <!-- get a template -->
      <map:transform src="editor/stylesheets/file2editor.xsl"/>
      <map:transform src="editor/stylesheets/skin.xsl"/>
      <map:serialize type="html"/>                
    </map:match>


    <!-- 
    Put

    Create a Document out of a Request
    save it if ther are no validation errors
    -->
    <map:match pattern="put">
      <map:generate type="request"/>
      <map:transform src="editor/stylesheets/editor2writer.xsl">
        <map:parameter name="base" value="content/xdocs/"/>
      </map:transform>
      <map:transform type="write-source">
          <map:parameter name="serializer" value="text"/>   
      </map:transform>          
      <map:transform src="editor/stylesheets/writeresult2skin.xsl"/>
      <map:transform src="editor/stylesheets/skin.xsl"/>                        
      <map:serialize type="html"/>

    </map:match>

    <!-- 
    Pre

    Create a Preview Document out of a Request
    validate it
    -->
    <map:match pattern="pre(bravo)">
      <map:generate type="request"/>
      <map:transform src="editor/stylesheets/request2editor.xsl"/>
      <map:transform type="textparser">
        <map:parameter name="grammar" value="chaperon/grammars/wiki.grm"/>
      </map:transform>  
      <map:transform src="resources/stylesheets/wiki2html.xsl"/>
      <map:transform src="editor/stylesheets/skin.xsl"/>
      <map:serialize type="html"/>
    </map:match>


    <map:match pattern="see(bravo)**.xml">
      <map:redirect-to uri="../../{1}.html"/>
    </map:match>


    <map:match pattern="get(bravo)/**">
      <map:generate src="content/xdocs/{1}"/>
      <map:transform src="editor/stylesheets/file2editor.xsl"/>
      <map:transform src="editor/stylesheets/skin.xsl"/>
      <map:serialize type="html"/>                
    </map:match>

  </map:pipeline>


  <map:pipeline>  

    <map:match pattern="**.html">
      <map:generate type="html" src="editor/docs/{1}.html"/>
      <map:serialize type="html"/>
    </map:match>

    <!-- the default page -->
    <map:match pattern="">
      <map:redirect-to uri="edit/editor.html"/> 
    </map:match>

    <map:match pattern="/">
      <map:redirect-to uri="edit/editor.html"/> 
    </map:match>


    <map:match pattern="**/*.gif">
      <map:read src="editor/images/{2}.gif" mime-type="image/gif"/>
    </map:match>

    <map:match pattern="**style">
      <map:read mime-type="text/css" src="editor/docs/slash-edit.css"/>
    </map:match>


    <!-- generic error handlers -->
    <map:handle-errors>
      <map:transform src="editor/stylesheets/error/error2html.xsl"/>
      <map:serialize status-code="500"/>
    </map:handle-errors>

    <map:handle-errors type="404">
      <map:transform src="editor/stylesheets/error/error2html.xsl"/>
      <map:serialize/>
    </map:handle-errors>

  </map:pipeline>

</map:pipelines>
</map:sitemap>
