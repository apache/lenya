<?xml version="1.0" encoding="UTF-8"?>
<!--
  ===================================================================
  
       Apache Common Documentation elements (Version 1.1)
  
  PURPOSE:
    This DTD was developed to create a simple yet powerful document
    type for software documentation for use with the Apache projects.
  
  TYPICAL INVOCATION:
  
    <!ENTITY % document PUBLIC
        "-//APACHE//ENTITIES Documentation Vxy//EN"
        "document-vxy.mod">
    %document;
  
    where
  
      x := major version
      y := minor version
  
  NOTES:
  
  AUTHORS:
    Stefano Mazzocchi <stefano@apache.org>
    Steven Noels <stevenn@apache.org>
  
  FIXME:
  
  CHANGE HISTORY:
  [Version 1.0]
    20020608 Initial version. (SN)
  
  COPYRIGHT:
    Copyright (c) 2002 The Apache Software Foundation.
  
    Permission to copy in any form is granted provided this notice is
    included in all copies. Permission to redistribute is granted
    provided this file is distributed untouched in all its parts and
    included files.
  
  ====================================================================
-->
<!-- =============================================================== -->
<!-- Useful entities for increased DTD readability -->
<!-- =============================================================== -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!-- Entities referred to later on are defined up front -->
  <xs:element name="markup" abstract="true"/>
  <xs:element name="special-inline" abstract="true"/>
  <xs:element name="links" abstract="true">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="link-content.mix"/>
      <xs:attributeGroup ref="common.att"/>
      <xs:attributeGroup ref="link.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="paragraphs" abstract="true" substitutionGroup="blocks"/>
  <xs:element name="tables" abstract="true" substitutionGroup="blocks">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" ref="caption"/>
        <xs:element maxOccurs="unbounded" ref="tr"/>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lists" abstract="true" substitutionGroup="blocks"/>
  <xs:element name="special-blocks" abstract="true" substitutionGroup="blocks"/>
  <!-- =============================================================== -->
  <!-- Entities for general XML compliance -->
  <!-- =============================================================== -->
  <!--
    Common attributes
    Every element has an ID attribute (sometimes required,
    but usually optional) for links. %common.att;
    is for common attributes where the ID is optional, and
    %common-idreq.att; is for common attributes where the
    ID is required.
  -->
  <xs:attributeGroup name="common.att">
    <xs:attribute name="id" type="xs:ID"/>
    <xs:attribute ref="xml:lang"/>
  </xs:attributeGroup>
  <xs:attributeGroup name="common-idreq.att">
    <xs:attribute name="id" use="required" type="xs:ID"/>
    <xs:attribute ref="xml:lang"/>
  </xs:attributeGroup>
  <!--
    def attribute =====================================================
            Points to the element where the relevant definition can be
            found, using the IDREF mechanism.  %def.att; is for optional
            def attributes, and %def-req.att; is for required def
            attributes.
    ====================================================================
  -->
  <!--
    ref attribute =====================================================
            Points to the element where more information can be found,
            using the IDREF mechanism.  %ref.att; is for optional
            ref attributes, and %ref-req.att; is for required ref
            attributes.
    ==================================================================
  -->
  <!-- =============================================================== -->
  <!-- Entities for general usage -->
  <!-- =============================================================== -->
  <!--
    Key attribute =====================================================
            Optionally provides a sorting or indexing key, for cases when
            the element content is inappropriate for this purpose.
    ====================================================================
  -->
  <!--
    Title attributes ==================================================
            Indicates that the element requires to have a title attribute.
    ====================================================================
  -->
  <!--
    Name attributes ==================================================
            Indicates that the element requires to have a name attribute.
    ====================================================================
  -->
  <xs:attributeGroup name="name.att">
    <xs:attribute name="name" use="required"/>
  </xs:attributeGroup>
  <!--
    Email attributes ==================================================
            Indicates that the element requires to have an email attribute.
    ====================================================================
  -->
  <xs:attributeGroup name="email.att">
    <xs:attribute name="email" use="required"/>
  </xs:attributeGroup>
  <!--
    Link attributes ===================================================
            Indicates that the element requires to have hyperlink attributes.
    ====================================================================
  -->
  <xs:attributeGroup name="link.att">
    <xs:attribute name="href" use="required"/>
    <xs:attribute name="role"/>
    <xs:attribute name="title"/>
  </xs:attributeGroup>
  <!-- =============================================================== -->
  <!-- General definitions -->
  <!-- =============================================================== -->
  <!-- A person is a general unparsed human entity -->
  <xs:element name="person">
    <xs:complexType>
      <xs:attributeGroup ref="common.att"/>
      <xs:attributeGroup ref="name.att"/>
      <xs:attributeGroup ref="email.att"/>
    </xs:complexType>
  </xs:element>
  <!-- =============================================================== -->
  <!-- Content definitions -->
  <!-- =============================================================== -->
  <xs:group name="link-content.mix">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element ref="markup"/>
        <xs:element ref="special-inline"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:group name="content.mix">
    <xs:choice>
      <xs:group ref="link-content.mix"/>
      <xs:element ref="links"/>
    </xs:choice>
  </xs:group>
  <!-- ==================================================== -->
  <!-- Phrase Markup -->
  <!-- ==================================================== -->
  <!-- Strong (typically bold) -->
  <xs:element name="strong" substitutionGroup="markup">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="code"/>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Emphasis (typically italic) -->
  <xs:element name="em" substitutionGroup="markup">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="code"/>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Code (typically monospaced) -->
  <xs:element name="code" substitutionGroup="markup">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Superscript (typically smaller and higher) -->
  <xs:element name="sup" substitutionGroup="markup">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Subscript (typically smaller and lower) -->
  <xs:element name="sub" substitutionGroup="markup">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- ==================================================== -->
  <!-- Hypertextual Links -->
  <!-- ==================================================== -->
  <!-- hyperlink (equivalent of <a ...>) -->
  <xs:element name="link" substitutionGroup="links"/>
  <!-- windows-replacing link (equivalent of <a ... target="_top">) -->
  <xs:element name="jump" substitutionGroup="links"/>
  <!-- window-forking link (equivalent of <a ... target="_blank">) -->
  <xs:element name="fork" substitutionGroup="links"/>
  <!-- ==================================================== -->
  <!-- Specials -->
  <!-- ==================================================== -->
  <!-- Breakline Object (typically forces line break) -->
  <xs:element name="br" substitutionGroup="special-inline">
    <xs:complexType>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Image Object (typically an inlined image) -->
  <xs:element name="img" substitutionGroup="special-inline">
    <xs:complexType>
      <xs:attribute name="src" use="required"/>
      <xs:attribute name="alt" use="required"/>
      <xs:attribute name="height"/>
      <xs:attribute name="width"/>
      <xs:attribute name="usemap"/>
      <xs:attribute name="ismap">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="ismap"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Image Icon (typically an inlined image placed as graphical item) -->
  <xs:element name="icon" substitutionGroup="special-inline">
    <xs:complexType>
      <xs:attribute name="src" use="required"/>
      <xs:attribute name="alt" use="required"/>
      <xs:attribute name="height"/>
      <xs:attribute name="width"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Acronym (in modern browsers, will have rollover text) -->
  <xs:element name="acronym" substitutionGroup="special-inline">
    <xs:complexType mixed="true">
      <xs:attribute name="title" use="required"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- =============================================================== -->
  <!-- Blocks definitions -->
  <!-- =============================================================== -->
  <xs:element name="blocks" abstract="true"/>
  <!-- ==================================================== -->
  <!-- Paragraphs -->
  <!-- ==================================================== -->
  <!-- Text Paragraph (normally vertically space delimited. Space can be preserved.) -->
  <xs:element name="p" substitutionGroup="paragraphs">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Source Paragraph (normally space is preserved) -->
  <xs:element name="source" substitutionGroup="paragraphs">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Note Paragraph (normally shown encapsulated) -->
  <xs:element name="note" substitutionGroup="paragraphs">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Warning Paragraph (normally shown with eye-catching colors) -->
  <xs:element name="warning" substitutionGroup="paragraphs">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Fixme Paragraph (normally not shown) -->
  <xs:element name="fixme" substitutionGroup="paragraphs">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attribute name="author" use="required"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- ==================================================== -->
  <!-- Tables -->
  <!-- ==================================================== -->
  <!-- Attributes that indicate the spanning of the table cell -->
  <xs:attributeGroup name="cell.span">
    <xs:attribute name="colspan" default="1"/>
    <xs:attribute name="rowspan" default="1"/>
  </xs:attributeGroup>
  <!-- Table element -->
  <xs:element name="table" substitutionGroup="tables"/>
  <!-- The table title -->
  <xs:element name="caption">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- The table row element -->
  <xs:element name="tr">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="th"/>
        <xs:element ref="td"/>
      </xs:choice>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- The table row header element -->
  <xs:element name="th">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
      <xs:attributeGroup ref="cell.span"/>
    </xs:complexType>
  </xs:element>
  <!-- The table row description element -->
  <xs:element name="td">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
      <xs:attributeGroup ref="cell.span"/>
    </xs:complexType>
  </xs:element>
  <!-- ==================================================== -->
  <!-- Lists -->
  <!-- ==================================================== -->
  <!-- List item -->
  <xs:element name="li">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="content.mix"/>
        <xs:element ref="lists"/>
        <xs:element ref="paragraphs"/>
      </xs:choice>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Unordered list (typically bulleted) -->
  <xs:element name="ul" substitutionGroup="lists">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="li"/>
        <xs:element ref="lists"/>
      </xs:choice>
      <xs:attributeGroup ref="common.att"/>
      <xs:attribute name="spacing">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="normal"/>
            <xs:enumeration value="compact"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    spacing attribute:
    Use "normal" to get normal vertical spacing for items;
    use "compact" to get less spacing.  The default is dependent
    on the stylesheet.
  -->
  <!-- Ordered list (typically numbered) -->
  <xs:element name="ol" substitutionGroup="lists">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="li"/>
        <xs:element ref="lists"/>
      </xs:choice>
      <xs:attributeGroup ref="common.att"/>
      <xs:attribute name="spacing">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="normal"/>
            <xs:enumeration value="compact"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--
    spacing attribute:
    Use "normal" to get normal vertical spacing for items;
    use "compact" to get less spacing.  The default is dependent
    on the stylesheet.
  -->
  <!-- Definition list (typically two-column) -->
  <xs:element name="dl" substitutionGroup="lists">
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element ref="dt"/>
        <xs:element ref="dd"/>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Definition term -->
  <xs:element name="dt">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- Definition description -->
  <xs:element name="dd">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="content.mix"/>
        <xs:element ref="lists"/>
        <xs:element ref="paragraphs"/>
      </xs:choice>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- ==================================================== -->
  <!-- Special Blocks -->
  <!-- ==================================================== -->
  <!-- Image Block (typically a separated and centered image) -->
  <xs:element name="figure" substitutionGroup="special-blocks">
    <xs:complexType>
      <xs:attribute name="src" use="required"/>
      <xs:attribute name="alt" use="required"/>
      <xs:attribute name="height"/>
      <xs:attribute name="width"/>
      <xs:attribute name="usemap"/>
      <xs:attribute name="ismap">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="ismap"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="align"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- anchor point (equivalent of <a name="...">, typically not rendered) -->
  <xs:element name="anchor" substitutionGroup="special-blocks">
    <xs:complexType>
      <xs:attributeGroup ref="common-idreq.att"/>
    </xs:complexType>
  </xs:element>
  <!-- =============================================================== -->
  <!-- Document -->
  <!-- =============================================================== -->
  <xs:element name="document">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="header"/>
        <xs:element ref="body"/>
        <xs:element minOccurs="0" ref="footer"/>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- ==================================================== -->
  <!-- Header -->
  <!-- ==================================================== -->
  <xs:element name="header">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="title"/>
        <xs:element minOccurs="0" ref="subtitle"/>
        <xs:element minOccurs="0" ref="version"/>
        <xs:element minOccurs="0" ref="type"/>
        <xs:element minOccurs="0" ref="authors"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="notice"/>
        <xs:element minOccurs="0" ref="abstract"/>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="title">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="markup"/>
        <xs:element ref="links"/>
        <xs:element ref="special-inline"/>
      </xs:choice>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="subtitle">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="markup"/>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="version">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="common.att"/>
      <xs:attribute name="major"/>
      <xs:attribute name="minor"/>
      <xs:attribute name="fix"/>
      <xs:attribute name="tag"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="type">
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="authors">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="person"/>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="notice">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="abstract">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <!-- ==================================================== -->
  <!-- Body -->
  <!-- ==================================================== -->
  <xs:element name="sections" abstract="true">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="title"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="sections"/>
          <xs:element ref="blocks"/>
        </xs:choice>
      </xs:sequence>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="body">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="sections"/>
        <xs:element ref="blocks"/>
      </xs:choice>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="section" substitutionGroup="sections"/>
  <!-- ==================================================== -->
  <!-- Footer -->
  <!-- ==================================================== -->
  <xs:element name="footer" type="legal"/>
  <xs:complexType name="legal">
    <xs:sequence>
      <xs:element ref="legal"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="legal">
    <xs:complexType mixed="true">
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="content.mix"/>
      <xs:attributeGroup ref="common.att"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
<!-- =============================================================== -->
<!-- End of DTD -->
<!-- =============================================================== -->
