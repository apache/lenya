<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN" "document-v11.dtd">

<document> 
  <header> 
    <title>Scheduler</title>
    <version>0.3</version> 
    <type>Overview document</type> 
    <authors>
      <person name="Michael Wechner" email="michael.wechner@lenya.org"/> 
      <person name="Christian Egli" email="christian.egli@lenya.org"/>
    </authors> 
  </header> 
  <body> 
    <section><title>The Scheduler</title> 
      
      <section><title>What is the Scheduler good for?</title> 
	<p>
	  If you want to publish an article at some specific time,
	  then you can tell the scheduler to execute the publication
	  process at this specific time.
	</p>
      </section>
      
      <section><title>User Interface</title> 
	<p>
	  To schedule a task for a specific page, click in the Menu
	  "File" on the item "Schedule".  Then you should see the
	  following screen:
	</p>
	
	<figure src="images/scheduler-user-screen.gif" alt=""/>

      </section>
      
      <section><title>Administrator Interface</title> 
	<p>
	  If you want to see all scheduled tasks for a specific
	  publication, then you have to click on the tab
	  "Administrator" to the enter the Lenya Administrator.  There
	  you can click on "Scheduler" to see all currently scheduled
	  tasks.
     </p>
	
	<figure src="images/scheduler-administrator-screen.gif" alt=""/>
	
      </section>
      
      <section><title>Existing Schedulers?</title> 
	<ul>
	  <li><link href="http://www.part.net/quartz.html">Quartz</link></li>
	  <li><link href="http://jcrontab.sourceforge.net/help.shtml">Jcrontab</link></li>
	</ul>
      </section>
      
      <section><title>Scheduling Markup Language</title>
	<p>
	  There are many ways to define a Scheduling Markup Language
	</p>
	<source><![CDATA[
	  
<sch:scheduler>

<sch:triggers>
  <sch:trigger name="date" src="org.lenya.cms.scheduler.DateTrigger"/>
  <sch:trigger name="modified" src="org.lenya.cms.scheduler.ContentModifiedTrigger"/>
</sch:triggers>

<sch:actions>
  <sch:action name="publish" src="org.lenya.cms.scheduler.PublishAction"/>
  <sch:action name="email" src="org.lenya.cms.scheduler.EMailAction"/>
</sch:actions>

<sch:publication name="nwt">
<sch:tasks>
  <sch:task action-type="publish">
    <sch:trigger type="date">
      <sch:parameter name="year" value="2002"/>
      <sch:parameter name="month" value="6"/>
      <sch:parameter name="day" value="14"/>
      <sch:parameter name="hour" value="13"/>
      <sch:parameter name="minute" value="47"/>
    </sch:trigger>
    <sch:parameter name="docid" value="articles/2002/6/13/article97HKI79"/>
  </sch:task>
</sch:tasks>
</sch:publication>
</sch:scheduler>

	]]></source>
      </section>
      
      <section><title>Java API</title> 
	<ul>
	  <li><link href="http://quartz.sourceforge.net/javadoc/index.html">Quartz</link></li>
	  <li><link href="http://jcrontab.sourceforge.net/doc/index.html">Jcrontab</link></li>
	</ul>
      </section>
      
      <section><title>Extra Library</title> 
	<ul>
	  <li>lib/commons-dbcp.jar</li>
	</ul>
      </section>
      
      <section><title>Configuration: web.xml</title>
	<p>
	  In order to initialize the serlet at startup, one has to modify
	  the file web.xml as follows:
	</p>
	<source><![CDATA[

   <!-- Scheduler -->
   <servlet>
     <servlet-name>LoadServlet</servlet-name>
     <servlet-class>org.quartz.web.LoadQuartzServlet</servlet-class>
     <load-on-startup>1</load-on-startup>
   </servlet>

   <servlet-mapping>
     <servlet-name>LoadServlet</servlet-name>
     <url-pattern>/load</url-pattern>
   </servlet-mapping>
   <!-- /Scheduler -->

	]]></source>
	<p>
	  This allows you to call the servlet by either
	  http://localhost:8080/lenya/servlet/LoadServlet or
	  http://localhost:8080/lenya/load
	</p>
      </section>
      <section><title>Status</title>
	<p>
	  The following things need to be done:	</p>
	  <ul>
	    <li><code>PublishJob</code> needs to be integrated with
	    the Lenya publishing framework.</li>
	    <li>The document id has to be passed to the servlet when
	    calling it from any document.</li>
	    <li>Move everything from scratchpad into proper
	    locations.</li>
	    <li>Make sure the state of the scheduler is saved when the
	    servlet engine goes down and is read in when it comes up.</li>
	  </ul>
      </section>
      <section><title>Design</title>
	<p>
	  The design of the scheduler is pretty much given due to the
	  implementation of the quarz scheduler. See also the
	  following diagram:	</p>
	  <figure src="images/schedulerClassDiagram.png" alt="Class Diagram for Scheduler"/>

      </section>
    </section>

    <section><title>Jobs</title> 
      <section><title>HelloWorldJob</title>
	<p>
...
	</p>
      </section>
    </section> 

    <section><title>Triggers</title> 
      <section><title>DateTrigger</title>
	<p>
...
	</p>
      </section>

      <section><title>CronTrigger</title>
	<p>
...
	</p>
      </section>
    </section> 
  </body>
</document>