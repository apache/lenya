<?xml version="1.0"?>

<xsp:page 
  language="java" 
  xmlns:xsp="http://apache.org/xsp"
  xmlns:xsp-lenya="http://apache.org/cocoon/lenya/xsp/1.0"
  xmlns:lenya-info="http://apache.org/cocoon/lenya/info/1.0"
  xmlns:li="http://apache.org/cocoon/lenya/info/1.0"
  xmlns:wf="http://apache.org/cocoon/lenya/workflow/1.0"
  xmlns:rc="http://apache.org/cocoon/lenya/rc/1.0"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:input="http://apache.org/cocoon/xsp/input/1.0"
  xmlns:request="http://apache.org/xsp/request/2.0"
>

  <xsp:structure>
    <xsp:include>java.io.IOException</xsp:include>
    <xsp:include>org.apache.cocoon.environment.Session</xsp:include>
    <xsp:include>org.apache.lenya.ac.Accreditable</xsp:include>
    <xsp:include>org.apache.lenya.ac.Group</xsp:include>
    <xsp:include>org.apache.lenya.ac.GroupManager</xsp:include>
    <xsp:include>org.apache.lenya.ac.IPRange</xsp:include>
    <xsp:include>org.apache.lenya.ac.IPRangeManager</xsp:include>
    <xsp:include>org.apache.lenya.ac.Item</xsp:include>
    <xsp:include>org.apache.lenya.ac.Role</xsp:include>
    <xsp:include>org.apache.lenya.ac.RoleManager</xsp:include>
    <xsp:include>org.apache.lenya.ac.User</xsp:include>
    <xsp:include>org.apache.lenya.ac.UserManager</xsp:include>
    <xsp:include>org.apache.lenya.ac.impl.Credential</xsp:include>
    <xsp:include>org.apache.lenya.cms.ac.cocoon.PolicyHelper</xsp:include>
    <xsp:include>org.apache.lenya.cms.ac.cocoon.CredentialWrapper</xsp:include>
    <xsp:include>org.apache.lenya.cms.publication.Publication</xsp:include>
    <xsp:include>org.apache.lenya.xml.DocumentHelper</xsp:include>
  </xsp:structure>
    
<lenya-info:info>
   
    <xsp:logic>
      
      RoleManager roleManager = (RoleManager) <input:get-attribute module="access-control" name="role-manager" as="object"/>;
      
      Role[] roles = roleManager.getRoles();
      String visitorRole = "";
      for (int i = 0; i &lt; roles.length; i++) {
          if (roles[i].getId().equals("visitor") || roles[i].getId().equals("visit")) {
              visitorRole = roles[i].getId();
          }
      }
      
      <li:visitor-role><xsp:expr>visitorRole</xsp:expr></li:visitor-role>
      
      String area = parameters.getParameter("area", null);
			PolicyHelper helper = new PolicyHelper();
			helper.setup(objectModel, this.manager, area);
      
      String[] types = { "user", "group", "iprange", "role" };
      for (int i = 0; i &lt; types.length; i++) {
				<li:items>
					<xsp:attribute name="type"><xsp:expr>types[i]</xsp:expr></xsp:attribute>
				<xsp:logic>
				Item[] items = null;
				
				if (types[i].equals("user")) {
						UserManager manager = (UserManager) <input:get-attribute module="access-control" name="user-manager" as="object"/>;
						items = manager.getUsers();
				}
				else if (types[i].equals("group")) {
						GroupManager manager = (GroupManager) <input:get-attribute module="access-control" name="group-manager" as="object"/>;
						items = manager.getGroups();
				}
				else if (types[i].equals("iprange")) {
						IPRangeManager manager = (IPRangeManager) <input:get-attribute module="access-control" name="iprange-manager" as="object"/>;
						items = manager.getIPRanges();
				}
				else if (types[i].equals("role")) {
						RoleManager manager = (RoleManager) <input:get-attribute module="access-control" name="role-manager" as="object"/>;
						items = manager.getRoles();
				}
						 
				for (int j = 0; j &lt; items.length; j++) {
						<li:item>
							<xsp:attribute name="id"><xsp:expr>items[j].getId()</xsp:expr></xsp:attribute>
							<xsp:expr>items[j].getName()</xsp:expr>
						</li:item>
				}
				</xsp:logic>
				</li:items>
				
				String[] operations = { "add", "delete" };
				
				for (int j = 0; j &lt; operations.length; j++) {
						if (request.getParameter(operations[j] + "_credential_" + types[i]) != null) {
								String roleId = request.getParameter("role_id");
								
								String accreditableId = request.getParameter("accreditable_id");
								Item item = null;
								for (int k = 0; k &lt; items.length; k++) {
								    if (accreditableId.equals(items[k].getId())) {
								        item = items[k];
								    }
								}
								
								Role role = roleManager.getRole(roleId);
								
								if (role == null) {
								    throw new ProcessingException("Role [" + roleId + "] does not exist!");
								}
								
								helper.manipulateCredential(item, role, operations[j]);
						}
				}
      
      }
      
				
			if (request.getParameter("change_ssl") != null) {
				if (request.getParameter("ssl") != null) {
						helper.setUrlSSLProtected(true);
				}
				else {
						helper.setUrlSSLProtected(false);
				}
			}
					
        <li:permissions>
          <xsp:attribute name="ssl"><xsp:expr>helper.isUrlSSLProtected()</xsp:expr></xsp:attribute>
          <xsp:attribute name="ancestor-ssl"><xsp:expr>helper.isAncestorSSLProtected()</xsp:expr></xsp:attribute>
          <xsp:attribute name="area"><xsp:expr>area</xsp:expr></xsp:attribute>
          
          <xsp:logic>
          	
          CredentialWrapper[] credentials = helper.getURICredentials();
          for (int j = 0; j &lt; credentials.length; j++) {
              <li:credential type="uri">
								<xsp:attribute name="accreditable-type"><xsp:expr>credentials[j].getType()</xsp:expr></xsp:attribute>
								<xsp:attribute name="accreditable-id"><xsp:expr>credentials[j].getAccreditableId()</xsp:expr></xsp:attribute>
								<xsp:attribute name="accreditable-name"><xsp:expr>credentials[j].getAccreditableName()</xsp:expr></xsp:attribute>
								<xsp:attribute name="role-id"><xsp:expr>credentials[j].getRoleId()</xsp:expr></xsp:attribute>
								<xsp:attribute name="role-name"><xsp:expr>credentials[j].getRoleName()</xsp:expr></xsp:attribute>
              </li:credential>
          }
          	
          credentials = helper.getParentCredentials();
          for (int j = 0; j &lt; credentials.length; j++) {
              <li:credential type="parent">
								<xsp:attribute name="accreditable-type"><xsp:expr>credentials[j].getType()</xsp:expr></xsp:attribute>
								<xsp:attribute name="accreditable-id"><xsp:expr>credentials[j].getAccreditableId()</xsp:expr></xsp:attribute>
								<xsp:attribute name="accreditable-name"><xsp:expr>credentials[j].getAccreditableName()</xsp:expr></xsp:attribute>
								<xsp:attribute name="role-id"><xsp:expr>credentials[j].getRoleId()</xsp:expr></xsp:attribute>
								<xsp:attribute name="role-name"><xsp:expr>credentials[j].getRoleName()</xsp:expr></xsp:attribute>
              </li:credential>
          }
          
          </xsp:logic>	
          
        </li:permissions>
        
        helper.tearDown();
    </xsp:logic>
   
</lenya-info:info>

</xsp:page>