<?xml version="1.0" encoding="ISO-8859-1"?>

<xsp:page
       language="java"
       xmlns:xsp="http://apache.org/xsp"
       xmlns:input="http://apache.org/cocoon/xsp/input/1.0"
       xmlns:usecase="http://apache.org/cocoon/lenya/usecase/1.0"
       xmlns:not="http://apache.org/cocoon/lenya/notification/1.0"
       xmlns:xsp-request="http://apache.org/xsp/request/2.0"
       >
       
  <xsp:structure>
    <xsp:include>org.apache.lenya.cms.ac.User</xsp:include>
    <xsp:include>org.apache.lenya.cms.ac.UserManager</xsp:include>
    <xsp:include>org.apache.lenya.cms.publication.DefaultDocumentBuilder</xsp:include>
    <xsp:include>org.apache.lenya.cms.publication.Document</xsp:include>
    <xsp:include>org.apache.lenya.cms.publication.Publication</xsp:include>
    <xsp:include>org.apache.lenya.cms.publication.SiteTree</xsp:include>
    <xsp:include>org.apache.lenya.cms.publication.SiteTreeNode</xsp:include>
    <xsp:include>org.apache.lenya.cms.workflow.CMSVersion</xsp:include>
    <xsp:include>org.apache.lenya.cms.workflow.WorkflowFactory</xsp:include>
    <xsp:include>org.apache.lenya.workflow.impl.History</xsp:include>
    <xsp:include>org.apache.lenya.workflow.impl.Version</xsp:include>
  </xsp:structure>

  <usecase:publish>
    
    <usecase:document-id><input:get-attribute module="page-envelope" name="document-id" as="string"/></usecase:document-id>
    <usecase:uris><xsp-request:get-parameter name="uris"/></usecase:uris>
    <usecase:sources><xsp-request:get-parameter name="sources"/></usecase:sources>
    <usecase:publication-id><input:get-attribute module="page-envelope" name="publication-id" as="string"/></usecase:publication-id>
    <usecase:context-prefix><input:get-attribute module="page-envelope" name="context-prefix" as="string"/></usecase:context-prefix>
    <usecase:area><input:get-attribute module="page-envelope" name="area" as="string"/></usecase:area>
    <usecase:language><input:get-attribute module="page-envelope" name="document-language" as="string"/></usecase:language>
    <usecase:referer><input:get-attribute module="request" name="requestURI" as="string"/></usecase:referer>
    
    <usecase:task-id>publish</usecase:task-id>
    
    <xsp:logic>
      try {
          Document document = (Document) <input:get-attribute module="page-envelope" as="object" name="document"/>;
          Object authoringNodeObject = <input:get-attribute module="sitetree" as="object" name="authoring-node"/>;
          if (null != authoringNodeObject &amp;&amp; authoringNodeObject instanceof SiteTreeNode) {
              SiteTreeNode authoringNode = (SiteTreeNode) authoringNodeObject;
              String authoringParentId = authoringNode.getAbsoluteParentId();
          
              SiteTree liveTree = document.getPublication().getSiteTree(Publication.LIVE_AREA);
              SiteTreeNode liveParent = liveTree.getNode(authoringParentId);
          
              Publication publication = (Publication)
                  <input:get-attribute module="page-envelope" as="object" name="publication"/>;
          
              if (liveParent == null) {
                  <usecase:message id="parent-not-live"/>
              
                  DefaultDocumentBuilder builder = DefaultDocumentBuilder.getInstance();
                  String url = builder.buildCanonicalUrl(publication,
                      document.getArea(), authoringNode.getAbsoluteParentId(), document.getLanguage());
                  
                  <usecase:parent>
                    <xsp:attribute name="href"><xsp-request:get-context-path/><xsp:expr>url</xsp:expr></xsp:attribute>
                    <xsp:attribute name="id"><xsp:expr>authoringNode.getParentId()</xsp:expr></xsp:attribute>
                    <xsp:attribute name="language"><xsp:expr>document.getLanguage()</xsp:expr></xsp:attribute>
                  </usecase:parent>
              }
          }
          
      }
      catch (Exception e) {
          throw new ProcessingException(e);
      }
    </xsp:logic>
    
	<not:users>
	<xsp:logic>
	  
		try {
		
		  Document document = (Document)
		  	<input:get-attribute module="page-envelope" as="object" name="document"/>;
		  String userId = null;
		  
		  if (WorkflowFactory.newInstance().hasWorkflow(document)) {
				History history = WorkflowFactory.getHistory(document);
				Version[] versions = history.getVersions();
				
				int i = versions.length - 1;
				while (userId == null &amp;&amp; i &gt;= 0) {
						if (versions[i].getEvent() != null &amp;&amp;
						    versions[i].getEvent().getName().equals("submit")) {
								userId = ((CMSVersion) versions[i]).getUserId();
						}
						i--;
				}
		  }
		
		  if (userId != null) {
				UserManager userManager = (UserManager)
					<input:get-attribute module="access-control" as="object" name="user-manager"/>;
				User user = userManager.getUser(userId);
				<not:user>
					<xsp:attribute name="id"><xsp:expr>user.getId()</xsp:expr></xsp:attribute>
					<xsp:attribute name="name"><xsp:expr>user.getName()</xsp:expr></xsp:attribute>
					<xsp:attribute name="email"><xsp:expr>user.getEmail()</xsp:expr></xsp:attribute>
				</not:user>
		  }
		}
		catch (Exception e) {
			throw new ProcessingException(e);
		}
		
	</xsp:logic>
	
	</not:users>
	
  </usecase:publish>
  
</xsp:page>
